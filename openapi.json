{
  "openapi": "3.0.0",
  "info": {
    "title": "daybook.cloud-backend",
    "version": "0.0.1",
    "description": "backend project for daybook.cloud using loopback-4 and postgress",
    "contact": {
      "name": "Prince Francis",
      "email": "princekfrancis@gmail.com"
    }
  },
  "paths": {
    "/accounting-reports/trial-balance": {
      "get": {
        "x-controller-name": "AccountingReportController",
        "x-operation-name": "trialBalance",
        "tags": [
          "AccountingReportController"
        ],
        "responses": {
          "200": {
            "description": "Trial Balance Report with metadata",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ledgerid": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "openingDebit": {
                            "type": "number",
                            "nullable": true
                          },
                          "openingCredit": {
                            "type": "number",
                            "nullable": true
                          },
                          "runningDebit": {
                            "type": "number",
                            "nullable": true
                          },
                          "runningCredit": {
                            "type": "number",
                            "nullable": true
                          },
                          "closingDebit": {
                            "type": "number",
                            "nullable": true
                          },
                          "closingCredit": {
                            "type": "number",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "AccountingReportController.trialBalance"
      }
    },
    "/audit-log/count": {
      "get": {
        "x-controller-name": "AuditLogController",
        "x-operation-name": "count",
        "tags": [
          "AuditLogController"
        ],
        "responses": {
          "200": {
            "description": "AuditLog model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLog.Filter"
                }
              }
            }
          }
        ],
        "operationId": "AuditLogController.count"
      }
    },
    "/audit-log/{id}": {
      "get": {
        "x-controller-name": "AuditLogController",
        "x-operation-name": "findById",
        "tags": [
          "AuditLogController"
        ],
        "responses": {
          "200": {
            "description": "AuditLog model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLog.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "AuditLogController.findById"
      }
    },
    "/audit-log": {
      "get": {
        "x-controller-name": "AuditLogController",
        "x-operation-name": "find",
        "tags": [
          "AuditLogController"
        ],
        "responses": {
          "200": {
            "description": "Array of AuditLog model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditLogWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLog.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "AuditLogController.find"
      }
    },
    "/bank-cash/count": {
      "get": {
        "x-controller-name": "BankCashController",
        "x-operation-name": "count",
        "tags": [
          "BankCashController"
        ],
        "responses": {
          "200": {
            "description": "BankCash model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankCash.Filter"
                }
              }
            }
          }
        ],
        "operationId": "BankCashController.count"
      }
    },
    "/bank-cash/{id}": {
      "patch": {
        "x-controller-name": "BankCashController",
        "x-operation-name": "updateById",
        "tags": [
          "BankCashController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "BankCash PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankCashPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "BankCashController.updateById"
      },
      "get": {
        "x-controller-name": "BankCashController",
        "x-operation-name": "findById",
        "tags": [
          "BankCashController"
        ],
        "responses": {
          "200": {
            "description": "BankCash model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankCashWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankCash.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "BankCashController.findById"
      },
      "delete": {
        "x-controller-name": "BankCashController",
        "x-operation-name": "deleteById",
        "tags": [
          "BankCashController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "BankCash DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "BankCashController.deleteById"
      }
    },
    "/bank-cash": {
      "post": {
        "x-controller-name": "BankCashController",
        "x-operation-name": "create",
        "tags": [
          "BankCashController"
        ],
        "responses": {
          "200": {
            "description": "BankCash model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankCash"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New BankCash"
              }
            }
          }
        },
        "operationId": "BankCashController.create"
      },
      "get": {
        "x-controller-name": "BankCashController",
        "x-operation-name": "find",
        "tags": [
          "BankCashController"
        ],
        "responses": {
          "200": {
            "description": "Array of BankCash model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankCashWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankCash.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "BankCashController.find"
      }
    },
    "/branch/count": {
      "get": {
        "x-controller-name": "BranchController",
        "x-operation-name": "count",
        "tags": [
          "BranchController"
        ],
        "responses": {
          "200": {
            "description": "Branch model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch.Filter"
                }
              }
            }
          }
        ],
        "operationId": "BranchController.count"
      }
    },
    "/branch/{id}": {
      "patch": {
        "x-controller-name": "BranchController",
        "x-operation-name": "updateById",
        "tags": [
          "BranchController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Branch PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "BranchController.updateById"
      },
      "get": {
        "x-controller-name": "BranchController",
        "x-operation-name": "findById",
        "tags": [
          "BranchController"
        ],
        "responses": {
          "200": {
            "description": "Branch model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "BranchController.findById"
      },
      "delete": {
        "x-controller-name": "BranchController",
        "x-operation-name": "deleteById",
        "tags": [
          "BranchController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Branch DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "BranchController.deleteById"
      }
    },
    "/branch": {
      "post": {
        "x-controller-name": "BranchController",
        "x-operation-name": "create",
        "tags": [
          "BranchController"
        ],
        "responses": {
          "200": {
            "description": "Branch model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Branch"
              }
            }
          }
        },
        "operationId": "BranchController.create"
      },
      "get": {
        "x-controller-name": "BranchController",
        "x-operation-name": "find",
        "tags": [
          "BranchController"
        ],
        "responses": {
          "200": {
            "description": "Array of Branch model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "BranchController.find"
      }
    },
    "/customer/count": {
      "get": {
        "x-controller-name": "CustomerController",
        "x-operation-name": "count",
        "tags": [
          "CustomerController"
        ],
        "responses": {
          "200": {
            "description": "Customer model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer.Filter"
                }
              }
            }
          }
        ],
        "operationId": "CustomerController.count"
      }
    },
    "/customer/{id}": {
      "patch": {
        "x-controller-name": "CustomerController",
        "x-operation-name": "updateById",
        "tags": [
          "CustomerController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Customer PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "CustomerController.updateById"
      },
      "get": {
        "x-controller-name": "CustomerController",
        "x-operation-name": "findById",
        "tags": [
          "CustomerController"
        ],
        "responses": {
          "200": {
            "description": "Customer model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "CustomerController.findById"
      },
      "delete": {
        "x-controller-name": "CustomerController",
        "x-operation-name": "deleteById",
        "tags": [
          "CustomerController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Customer DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "CustomerController.deleteById"
      }
    },
    "/customer": {
      "post": {
        "x-controller-name": "CustomerController",
        "x-operation-name": "create",
        "tags": [
          "CustomerController"
        ],
        "responses": {
          "200": {
            "description": "Customer model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Customer"
              }
            }
          }
        },
        "operationId": "CustomerController.create"
      },
      "get": {
        "x-controller-name": "CustomerController",
        "x-operation-name": "find",
        "tags": [
          "CustomerController"
        ],
        "responses": {
          "200": {
            "description": "Array of Customer model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "CustomerController.find"
      }
    },
    "/customer-receipt/count": {
      "get": {
        "x-controller-name": "CustomerReceiptController",
        "x-operation-name": "count",
        "tags": [
          "CustomerReceiptController"
        ],
        "responses": {
          "200": {
            "description": "SaleInvoiceReceipt model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReceipt.Filter"
                }
              }
            }
          }
        ],
        "operationId": "CustomerReceiptController.count"
      }
    },
    "/customer-receipt/{id}": {
      "patch": {
        "x-controller-name": "CustomerReceiptController",
        "x-operation-name": "updateById",
        "tags": [
          "CustomerReceiptController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "CustomerReceipt PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "amount": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "html": {
                        "type": "string"
                      },
                      "unicode": {
                        "type": "string"
                      },
                      "decimal": {
                        "type": "number"
                      }
                    }
                  },
                  "cprops": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "sprops": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "customerid": {
                    "type": "string"
                  },
                  "bcashid": {
                    "type": "string"
                  },
                  "invoices": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "saleinvoiceid": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "CustomerReceiptController.updateById"
      },
      "get": {
        "x-controller-name": "CustomerReceiptController",
        "x-operation-name": "findById",
        "tags": [
          "CustomerReceiptController"
        ],
        "responses": {
          "200": {
            "description": "SaleInvoiceReceipt model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReceiptWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReceipt.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "CustomerReceiptController.findById"
      },
      "delete": {
        "x-controller-name": "CustomerReceiptController",
        "x-operation-name": "deleteById",
        "tags": [
          "CustomerReceiptController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "CustomerReceipt DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "CustomerReceiptController.deleteById"
      }
    },
    "/customer-receipt": {
      "post": {
        "x-controller-name": "CustomerReceiptController",
        "x-operation-name": "create",
        "tags": [
          "CustomerReceiptController"
        ],
        "responses": {
          "200": {
            "description": "CustomerReceipt model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReceipt"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "amount",
                  "currency",
                  "customerid"
                ],
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "amount": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "html": {
                        "type": "string"
                      },
                      "unicode": {
                        "type": "string"
                      },
                      "decimal": {
                        "type": "number"
                      }
                    }
                  },
                  "cprops": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "sprops": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "customerid": {
                    "type": "string"
                  },
                  "bcashid": {
                    "type": "string"
                  },
                  "invoices": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "saleinvoiceid": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "operationId": "CustomerReceiptController.create"
      },
      "get": {
        "x-controller-name": "CustomerReceiptController",
        "x-operation-name": "find",
        "tags": [
          "CustomerReceiptController"
        ],
        "responses": {
          "200": {
            "description": "Array of SaleInvoiceReceipt model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerReceiptWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReceipt.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "CustomerReceiptController.find"
      }
    },
    "/fiscal-year/count": {
      "get": {
        "x-controller-name": "FiscalYearController",
        "x-operation-name": "count",
        "tags": [
          "FiscalYearController"
        ],
        "responses": {
          "200": {
            "description": "FiscalYear model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalYear.Filter"
                }
              }
            }
          }
        ],
        "operationId": "FiscalYearController.count"
      }
    },
    "/fiscal-year/{id}": {
      "patch": {
        "x-controller-name": "FiscalYearController",
        "x-operation-name": "updateById",
        "tags": [
          "FiscalYearController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "FiscalYear PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FiscalYearPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "FiscalYearController.updateById"
      },
      "get": {
        "x-controller-name": "FiscalYearController",
        "x-operation-name": "findById",
        "tags": [
          "FiscalYearController"
        ],
        "responses": {
          "200": {
            "description": "FiscalYear model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalYearWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalYear.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "FiscalYearController.findById"
      },
      "delete": {
        "x-controller-name": "FiscalYearController",
        "x-operation-name": "deleteById",
        "tags": [
          "FiscalYearController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "FiscalYear DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "FiscalYearController.deleteById"
      }
    },
    "/fiscal-year": {
      "post": {
        "x-controller-name": "FiscalYearController",
        "x-operation-name": "create",
        "tags": [
          "FiscalYearController"
        ],
        "responses": {
          "200": {
            "description": "FiscalYear model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalYear"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New FiscalYear"
              }
            }
          }
        },
        "operationId": "FiscalYearController.create"
      },
      "get": {
        "x-controller-name": "FiscalYearController",
        "x-operation-name": "find",
        "tags": [
          "FiscalYearController"
        ],
        "responses": {
          "200": {
            "description": "Array of FiscalYear model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FiscalYearWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalYear.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "FiscalYearController.find"
      }
    },
    "/item/count": {
      "get": {
        "x-controller-name": "ItemController",
        "x-operation-name": "count",
        "tags": [
          "ItemController"
        ],
        "responses": {
          "200": {
            "description": "Item model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ItemController.count"
      }
    },
    "/item/{id}": {
      "patch": {
        "x-controller-name": "ItemController",
        "x-operation-name": "updateById",
        "tags": [
          "ItemController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Item PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ItemController.updateById"
      },
      "get": {
        "x-controller-name": "ItemController",
        "x-operation-name": "findById",
        "tags": [
          "ItemController"
        ],
        "responses": {
          "200": {
            "description": "Item model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "ItemController.findById"
      },
      "delete": {
        "x-controller-name": "ItemController",
        "x-operation-name": "deleteById",
        "tags": [
          "ItemController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Item DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "ItemController.deleteById"
      }
    },
    "/item": {
      "post": {
        "x-controller-name": "ItemController",
        "x-operation-name": "create",
        "tags": [
          "ItemController"
        ],
        "responses": {
          "200": {
            "description": "Item model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Item"
              }
            }
          }
        },
        "operationId": "ItemController.create"
      },
      "get": {
        "x-controller-name": "ItemController",
        "x-operation-name": "find",
        "tags": [
          "ItemController"
        ],
        "responses": {
          "200": {
            "description": "Array of Item model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "ItemController.find"
      }
    },
    "/item-category/count": {
      "get": {
        "x-controller-name": "ItemCategoryController",
        "x-operation-name": "count",
        "tags": [
          "ItemCategoryController"
        ],
        "responses": {
          "200": {
            "description": "ItemCategory model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemCategory.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ItemCategoryController.count"
      }
    },
    "/item-category/{id}": {
      "patch": {
        "x-controller-name": "ItemCategoryController",
        "x-operation-name": "updateById",
        "tags": [
          "ItemCategoryController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "ItemCategory PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemCategoryPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ItemCategoryController.updateById"
      },
      "get": {
        "x-controller-name": "ItemCategoryController",
        "x-operation-name": "findById",
        "tags": [
          "ItemCategoryController"
        ],
        "responses": {
          "200": {
            "description": "ItemCategory model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemCategoryWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemCategory.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "ItemCategoryController.findById"
      },
      "delete": {
        "x-controller-name": "ItemCategoryController",
        "x-operation-name": "deleteById",
        "tags": [
          "ItemCategoryController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "ItemCategory DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "ItemCategoryController.deleteById"
      }
    },
    "/item-category": {
      "post": {
        "x-controller-name": "ItemCategoryController",
        "x-operation-name": "create",
        "tags": [
          "ItemCategoryController"
        ],
        "responses": {
          "200": {
            "description": "ItemCategory model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemCategory"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New ItemCategory"
              }
            }
          }
        },
        "operationId": "ItemCategoryController.create"
      },
      "get": {
        "x-controller-name": "ItemCategoryController",
        "x-operation-name": "find",
        "tags": [
          "ItemCategoryController"
        ],
        "responses": {
          "200": {
            "description": "Array of ItemCategory model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemCategoryWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemCategory.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "ItemCategoryController.find"
      }
    },
    "/journal/count": {
      "get": {
        "x-controller-name": "JournalController",
        "x-operation-name": "count",
        "tags": [
          "JournalController"
        ],
        "responses": {
          "200": {
            "description": "Journal model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Journal.Filter"
                }
              }
            }
          }
        ],
        "operationId": "JournalController.count"
      }
    },
    "/journal/many": {
      "post": {
        "x-controller-name": "JournalController",
        "x-operation-name": "createMany",
        "tags": [
          "JournalController"
        ],
        "responses": {
          "200": {
            "description": "Journal model instance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Journal"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "date",
                    "entries"
                  ],
                  "properties": {
                    "date": {
                      "type": "string",
                      "format": "date"
                    },
                    "number": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "props": {
                      "type": "object",
                      "additionalProperties": true
                    },
                    "entries": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/JournalEntryExcluding_id-journalid-order_"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "operationId": "JournalController.createMany"
      }
    },
    "/journal/{id}/documents/{docId}": {
      "delete": {
        "x-controller-name": "JournalController",
        "x-operation-name": "deleteJournalDoc",
        "tags": [
          "JournalController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Journal DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "docId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "JournalController.deleteJournalDoc"
      }
    },
    "/journal/{id}/documents": {
      "post": {
        "x-controller-name": "JournalController",
        "x-operation-name": "attachJournalDocs",
        "tags": [
          "JournalController"
        ],
        "responses": {
          "200": {
            "description": "StoredDocuments model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string"
                      },
                      "size": {
                        "type": "number"
                      },
                      "type": {
                        "type": "string"
                      },
                      "category": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "props": {
                        "type": "object"
                      },
                      "createdat": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "addedbyid": {
                        "type": "string"
                      },
                      "organizationid": {
                        "type": "string"
                      },
                      "putUrl": {
                        "type": "string",
                        "description": "Pre-signed URL for uploading the document"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/New Documents"
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "JournalController.attachJournalDocs"
      }
    },
    "/journal/{id}": {
      "patch": {
        "x-controller-name": "JournalController",
        "x-operation-name": "updateById",
        "tags": [
          "JournalController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Journal PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date"
                  },
                  "number": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "props": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "entries": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/JournalEntryExcluding_id-journalid-order_"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "JournalController.updateById"
      },
      "get": {
        "x-controller-name": "JournalController",
        "x-operation-name": "findById",
        "tags": [
          "JournalController"
        ],
        "responses": {
          "200": {
            "description": "Journal model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Journal.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "JournalController.findById"
      },
      "delete": {
        "x-controller-name": "JournalController",
        "x-operation-name": "deleteById",
        "tags": [
          "JournalController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Journal DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "JournalController.deleteById"
      }
    },
    "/journal": {
      "post": {
        "x-controller-name": "JournalController",
        "x-operation-name": "create",
        "tags": [
          "JournalController"
        ],
        "responses": {
          "200": {
            "description": "Journal model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Journal"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "entries"
                ],
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date"
                  },
                  "number": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "props": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "entries": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/JournalEntryExcluding_id-journalid-order_"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "operationId": "JournalController.create"
      },
      "get": {
        "x-controller-name": "JournalController",
        "x-operation-name": "find",
        "tags": [
          "JournalController"
        ],
        "responses": {
          "200": {
            "description": "Array of Journal model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Journal.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "JournalController.find"
      }
    },
    "/ledger/count": {
      "get": {
        "x-controller-name": "LedgerController",
        "x-operation-name": "count",
        "tags": [
          "LedgerController"
        ],
        "responses": {
          "200": {
            "description": "Ledger model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger.Filter"
                }
              }
            }
          }
        ],
        "operationId": "LedgerController.count"
      }
    },
    "/ledger/{id}": {
      "patch": {
        "x-controller-name": "LedgerController",
        "x-operation-name": "updateById",
        "tags": [
          "LedgerController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Ledger PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "LedgerController.updateById"
      },
      "get": {
        "x-controller-name": "LedgerController",
        "x-operation-name": "findById",
        "tags": [
          "LedgerController"
        ],
        "responses": {
          "200": {
            "description": "Ledger model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LedgerWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "LedgerController.findById"
      },
      "delete": {
        "x-controller-name": "LedgerController",
        "x-operation-name": "deleteById",
        "tags": [
          "LedgerController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Ledger DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "LedgerController.deleteById"
      }
    },
    "/ledger": {
      "post": {
        "x-controller-name": "LedgerController",
        "x-operation-name": "create",
        "tags": [
          "LedgerController"
        ],
        "responses": {
          "200": {
            "description": "Ledger model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Ledger"
              }
            }
          }
        },
        "operationId": "LedgerController.create"
      },
      "get": {
        "x-controller-name": "LedgerController",
        "x-operation-name": "find",
        "tags": [
          "LedgerController"
        ],
        "responses": {
          "200": {
            "description": "Array of Ledger model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LedgerWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "LedgerController.find"
      }
    },
    "/ledger-category/count": {
      "get": {
        "x-controller-name": "LedgerCategoryController",
        "x-operation-name": "count",
        "tags": [
          "LedgerCategoryController"
        ],
        "responses": {
          "200": {
            "description": "LedgerCategory model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LedgerCategory.Filter"
                }
              }
            }
          }
        ],
        "operationId": "LedgerCategoryController.count"
      }
    },
    "/ledger-category/{id}": {
      "patch": {
        "x-controller-name": "LedgerCategoryController",
        "x-operation-name": "updateById",
        "tags": [
          "LedgerCategoryController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "LedgerCategory PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerCategoryPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "LedgerCategoryController.updateById"
      },
      "get": {
        "x-controller-name": "LedgerCategoryController",
        "x-operation-name": "findById",
        "tags": [
          "LedgerCategoryController"
        ],
        "responses": {
          "200": {
            "description": "LedgerCategory model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LedgerCategoryWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LedgerCategory.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "LedgerCategoryController.findById"
      },
      "delete": {
        "x-controller-name": "LedgerCategoryController",
        "x-operation-name": "deleteById",
        "tags": [
          "LedgerCategoryController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "LedgerCategory DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "LedgerCategoryController.deleteById"
      }
    },
    "/ledger-category": {
      "post": {
        "x-controller-name": "LedgerCategoryController",
        "x-operation-name": "create",
        "tags": [
          "LedgerCategoryController"
        ],
        "responses": {
          "200": {
            "description": "LedgerCategory model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LedgerCategory"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New LedgerCategory"
              }
            }
          }
        },
        "operationId": "LedgerCategoryController.create"
      },
      "get": {
        "x-controller-name": "LedgerCategoryController",
        "x-operation-name": "find",
        "tags": [
          "LedgerCategoryController"
        ],
        "responses": {
          "200": {
            "description": "Array of LedgerCategory model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LedgerCategoryWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LedgerCategory.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "LedgerCategoryController.find"
      }
    },
    "/organization/count": {
      "get": {
        "x-controller-name": "OrganizationController",
        "x-operation-name": "count",
        "tags": [
          "OrganizationController"
        ],
        "responses": {
          "200": {
            "description": "Organization model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization.Filter"
                }
              }
            }
          }
        ],
        "operationId": "OrganizationController.count"
      }
    },
    "/organization/{id}": {
      "patch": {
        "x-controller-name": "OrganizationController",
        "x-operation-name": "updateById",
        "tags": [
          "OrganizationController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Organization PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUpdateDtoPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "OrganizationController.updateById"
      },
      "get": {
        "x-controller-name": "OrganizationController",
        "x-operation-name": "findById",
        "tags": [
          "OrganizationController"
        ],
        "responses": {
          "200": {
            "description": "Organization model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "OrganizationController.findById"
      },
      "delete": {
        "x-controller-name": "OrganizationController",
        "x-operation-name": "deleteById",
        "tags": [
          "OrganizationController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Organization DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "OrganizationController.deleteById"
      }
    },
    "/organization": {
      "post": {
        "x-controller-name": "OrganizationController",
        "x-operation-name": "create",
        "tags": [
          "OrganizationController"
        ],
        "responses": {
          "200": {
            "description": "Organization model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Organization"
              }
            }
          }
        },
        "operationId": "OrganizationController.create"
      },
      "get": {
        "x-controller-name": "OrganizationController",
        "x-operation-name": "find",
        "tags": [
          "OrganizationController"
        ],
        "responses": {
          "200": {
            "description": "Array of Organization model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "OrganizationController.find"
      }
    },
    "/purchase-invoice/count": {
      "get": {
        "x-controller-name": "PurchaseInvoiceController",
        "x-operation-name": "count",
        "tags": [
          "PurchaseInvoiceController"
        ],
        "responses": {
          "200": {
            "description": "PurchaseInvoice model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoice.Filter"
                }
              }
            }
          }
        ],
        "operationId": "PurchaseInvoiceController.count"
      }
    },
    "/purchase-invoice/{id}": {
      "patch": {
        "x-controller-name": "PurchaseInvoiceController",
        "x-operation-name": "updateById",
        "tags": [
          "PurchaseInvoiceController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "PurchaseInvoice PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Unique invoice number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Invoice date"
                  },
                  "duedate": {
                    "type": "string",
                    "format": "date",
                    "description": "Due date for payment"
                  },
                  "itemtotal": {
                    "type": "number",
                    "description": "Total amount of all items before discounts and tax",
                    "minimum": 0
                  },
                  "discount": {
                    "type": "number",
                    "description": "Discount applied to the invoice",
                    "minimum": 0,
                    "default": 0
                  },
                  "subtotal": {
                    "type": "number",
                    "description": "Subtotal after discount but before tax",
                    "minimum": 0
                  },
                  "tax": {
                    "type": "number",
                    "description": "Total tax amount applied",
                    "minimum": 0,
                    "default": 0
                  },
                  "roundoff": {
                    "type": "number",
                    "description": "Round-off amount applied to the total",
                    "minimum": 0,
                    "default": 0
                  },
                  "grandtotal": {
                    "type": "number",
                    "description": "Final total payable amount",
                    "minimum": 0
                  },
                  "currency": {
                    "type": "object",
                    "description": "Currency details used in the invoice"
                  },
                  "billingaddress": {
                    "type": "object",
                    "description": "Billing address details"
                  },
                  "shippingaddress": {
                    "type": "object",
                    "description": "Shipping address details"
                  },
                  "cprops": {
                    "type": "object",
                    "description": "Additional properties",
                    "default": {}
                  },
                  "description": {
                    "type": "string",
                    "description": "Additional description or notes for the invoice",
                    "default": ""
                  },
                  "vendorid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the vendor associated with the invoice"
                  },
                  "items": {
                    "type": "array",
                    "description": "List of items in the purchase invoice",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the sale item"
                        },
                        "displayname": {
                          "type": "string",
                          "description": "Display name of the sale item",
                          "default": ""
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the sale item",
                          "default": ""
                        },
                        "order": {
                          "type": "number",
                          "description": "Order of the item in the invoice",
                          "minimum": 0
                        },
                        "code": {
                          "type": "string",
                          "description": "HSN code of the item"
                        },
                        "price": {
                          "type": "number",
                          "description": "Price per unit of the item",
                          "minimum": 0
                        },
                        "quantity": {
                          "type": "number",
                          "description": "Quantity of the item sold",
                          "minimum": 1
                        },
                        "itemtotal": {
                          "type": "number",
                          "description": "Total price before discount and tax",
                          "minimum": 0
                        },
                        "discpercent": {
                          "type": "number",
                          "description": "Discount percentage applied to the item",
                          "minimum": 0,
                          "default": 0
                        },
                        "discamount": {
                          "type": "number",
                          "description": "Discount amount applied to the item",
                          "minimum": 0,
                          "default": 0
                        },
                        "subtotal": {
                          "type": "number",
                          "description": "Subtotal after discount but before tax",
                          "minimum": 0
                        },
                        "taxamount": {
                          "type": "number",
                          "description": "Total tax amount applied to the item",
                          "minimum": 0,
                          "default": 0
                        },
                        "grandtotal": {
                          "type": "number",
                          "description": "Final total after tax and discount",
                          "minimum": 0
                        },
                        "itemid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "ID of the item being sold"
                        },
                        "taxes": {
                          "type": "array",
                          "description": "List of taxes applied to the sale item",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Full name of the tax"
                              },
                              "shortname": {
                                "type": "string",
                                "description": "Short name or abbreviation of the tax"
                              },
                              "rate": {
                                "type": "number",
                                "description": "Tax rate percentage applied",
                                "minimum": 0
                              },
                              "appliedto": {
                                "type": "number",
                                "description": "Amount to which tax is applied",
                                "minimum": 0
                              },
                              "amount": {
                                "type": "number",
                                "description": "Total tax amount calculated",
                                "minimum": 0
                              },
                              "taxid": {
                                "type": "string",
                                "format": "uuid",
                                "description": "ID of the tax entity"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "PurchaseInvoiceController.updateById"
      },
      "get": {
        "x-controller-name": "PurchaseInvoiceController",
        "x-operation-name": "findById",
        "tags": [
          "PurchaseInvoiceController"
        ],
        "responses": {
          "200": {
            "description": "PurchaseInvoice model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoiceWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoice.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "PurchaseInvoiceController.findById"
      },
      "delete": {
        "x-controller-name": "PurchaseInvoiceController",
        "x-operation-name": "deleteById",
        "tags": [
          "PurchaseInvoiceController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "PurchaseInvoice DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "PurchaseInvoiceController.deleteById"
      }
    },
    "/purchase-invoice": {
      "post": {
        "x-controller-name": "PurchaseInvoiceController",
        "x-operation-name": "create",
        "tags": [
          "PurchaseInvoiceController"
        ],
        "responses": {
          "200": {
            "description": "PurchaseInvoice model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoice"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "duedate",
                  "itemtotal",
                  "subtotal",
                  "grandtotal",
                  "currency",
                  "vendorid",
                  "items"
                ],
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Unique invoice number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Invoice date"
                  },
                  "duedate": {
                    "type": "string",
                    "format": "date",
                    "description": "Due date for payment"
                  },
                  "itemtotal": {
                    "type": "number",
                    "description": "Total amount of all items before discounts and tax",
                    "minimum": 0
                  },
                  "discount": {
                    "type": "number",
                    "description": "Discount applied to the invoice",
                    "minimum": 0,
                    "default": 0
                  },
                  "subtotal": {
                    "type": "number",
                    "description": "Subtotal after discount but before tax",
                    "minimum": 0
                  },
                  "tax": {
                    "type": "number",
                    "description": "Total tax amount applied",
                    "minimum": 0,
                    "default": 0
                  },
                  "roundoff": {
                    "type": "number",
                    "description": "Round-off amount applied to the total",
                    "minimum": 0,
                    "default": 0
                  },
                  "grandtotal": {
                    "type": "number",
                    "description": "Final total payable amount",
                    "minimum": 0
                  },
                  "currency": {
                    "type": "object",
                    "description": "Currency details used in the invoice"
                  },
                  "billingaddress": {
                    "type": "object",
                    "description": "Billing address details"
                  },
                  "shippingaddress": {
                    "type": "object",
                    "description": "Shipping address details"
                  },
                  "cprops": {
                    "type": "object",
                    "description": "Additional properties",
                    "default": {}
                  },
                  "description": {
                    "type": "string",
                    "description": "Additional description or notes for the invoice",
                    "default": ""
                  },
                  "vendorid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the vendor associated with the invoice"
                  },
                  "items": {
                    "type": "array",
                    "description": "List of items in the purchase invoice",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "quantity",
                        "price",
                        "itemid",
                        "itemtotal",
                        "subtotal",
                        "grandtotal"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the sale item"
                        },
                        "displayname": {
                          "type": "string",
                          "description": "Display name of the sale item",
                          "default": ""
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the sale item",
                          "default": ""
                        },
                        "order": {
                          "type": "number",
                          "description": "Order of the item in the invoice",
                          "minimum": 0
                        },
                        "code": {
                          "type": "string",
                          "description": "HSN code of the item"
                        },
                        "price": {
                          "type": "number",
                          "description": "Price per unit of the item",
                          "minimum": 0
                        },
                        "quantity": {
                          "type": "number",
                          "description": "Quantity of the item sold",
                          "minimum": 1
                        },
                        "itemtotal": {
                          "type": "number",
                          "description": "Total price before discount and tax",
                          "minimum": 0
                        },
                        "discpercent": {
                          "type": "number",
                          "description": "Discount percentage applied to the item",
                          "minimum": 0,
                          "default": 0
                        },
                        "discamount": {
                          "type": "number",
                          "description": "Discount amount applied to the item",
                          "minimum": 0,
                          "default": 0
                        },
                        "subtotal": {
                          "type": "number",
                          "description": "Subtotal after discount but before tax",
                          "minimum": 0
                        },
                        "taxamount": {
                          "type": "number",
                          "description": "Total tax amount applied to the item",
                          "minimum": 0,
                          "default": 0
                        },
                        "grandtotal": {
                          "type": "number",
                          "description": "Final total after tax and discount",
                          "minimum": 0
                        },
                        "itemid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "ID of the item being sold"
                        },
                        "taxes": {
                          "type": "array",
                          "description": "List of taxes applied to the sale item",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Full name of the tax"
                              },
                              "shortname": {
                                "type": "string",
                                "description": "Short name or abbreviation of the tax"
                              },
                              "rate": {
                                "type": "number",
                                "description": "Tax rate percentage applied",
                                "minimum": 0
                              },
                              "appliedto": {
                                "type": "number",
                                "description": "Amount to which tax is applied",
                                "minimum": 0
                              },
                              "amount": {
                                "type": "number",
                                "description": "Total tax amount calculated",
                                "minimum": 0
                              },
                              "taxid": {
                                "type": "string",
                                "format": "uuid",
                                "description": "ID of the tax entity"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "PurchaseInvoiceController.create"
      },
      "get": {
        "x-controller-name": "PurchaseInvoiceController",
        "x-operation-name": "find",
        "tags": [
          "PurchaseInvoiceController"
        ],
        "responses": {
          "200": {
            "description": "Array of PurchaseInvoice model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseInvoiceWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoice.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "PurchaseInvoiceController.find"
      }
    },
    "/purchase-return/count": {
      "get": {
        "x-controller-name": "PurchaseReturnController",
        "x-operation-name": "count",
        "tags": [
          "PurchaseReturnController"
        ],
        "responses": {
          "200": {
            "description": "PurchaseReturn model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReturn.Filter"
                }
              }
            }
          }
        ],
        "operationId": "PurchaseReturnController.count"
      }
    },
    "/purchase-return/{id}": {
      "patch": {
        "x-controller-name": "PurchaseReturnController",
        "x-operation-name": "updateById",
        "tags": [
          "PurchaseReturnController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "PurchaseReturn PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Unique invoice number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Purchase return date"
                  },
                  "duedate": {
                    "type": "string",
                    "format": "date",
                    "description": "Due date for payment"
                  },
                  "itemtotal": {
                    "type": "number",
                    "description": "Total amount of all items before tax",
                    "minimum": 0
                  },
                  "tax": {
                    "type": "number",
                    "description": "Total tax amount applied",
                    "minimum": 0,
                    "default": 0
                  },
                  "roundoff": {
                    "type": "number",
                    "description": "Round-off amount applied to the total",
                    "minimum": 0,
                    "default": 0
                  },
                  "grandtotal": {
                    "type": "number",
                    "description": "Final total payable amount",
                    "minimum": 0
                  },
                  "cprops": {
                    "type": "object",
                    "description": "Additional properties",
                    "default": {}
                  },
                  "sprops": {
                    "type": "object",
                    "description": "Additional properties",
                    "default": {}
                  },
                  "description": {
                    "type": "string",
                    "description": "Additional description or notes for the invoice",
                    "default": ""
                  },
                  "purchaseinvoiceid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the purchase invoice associated with the purchase return"
                  },
                  "items": {
                    "type": "array",
                    "description": "List of items in the purchase invoice",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "quantity",
                        "price",
                        "itemid",
                        "itemtotal",
                        "grandtotal"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the sale item"
                        },
                        "displayname": {
                          "type": "string",
                          "description": "Display name of the sale item",
                          "default": ""
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the sale item",
                          "default": ""
                        },
                        "order": {
                          "type": "number",
                          "description": "Order of the item in the invoice",
                          "minimum": 0
                        },
                        "code": {
                          "type": "string",
                          "description": "HSN code of the item"
                        },
                        "price": {
                          "type": "number",
                          "description": "Price per unit of the item",
                          "minimum": 0
                        },
                        "quantity": {
                          "type": "number",
                          "description": "Quantity of the item sold",
                          "minimum": 1
                        },
                        "itemtotal": {
                          "type": "number",
                          "description": "Total price before discount and tax",
                          "minimum": 0
                        },
                        "taxamount": {
                          "type": "number",
                          "description": "Total tax amount applied to the item",
                          "minimum": 0,
                          "default": 0
                        },
                        "grandtotal": {
                          "type": "number",
                          "description": "Final total after tax and discount",
                          "minimum": 0
                        },
                        "itemid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "ID of the item being sold"
                        },
                        "taxes": {
                          "type": "array",
                          "description": "List of taxes applied to the sale item",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Full name of the tax"
                              },
                              "shortname": {
                                "type": "string",
                                "description": "Short name or abbreviation of the tax"
                              },
                              "rate": {
                                "type": "number",
                                "description": "Tax rate percentage applied",
                                "minimum": 0
                              },
                              "appliedto": {
                                "type": "number",
                                "description": "Amount to which tax is applied",
                                "minimum": 0
                              },
                              "amount": {
                                "type": "number",
                                "description": "Total tax amount calculated",
                                "minimum": 0
                              },
                              "taxid": {
                                "type": "string",
                                "format": "uuid",
                                "description": "ID of the tax entity"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "PurchaseReturnController.updateById"
      },
      "get": {
        "x-controller-name": "PurchaseReturnController",
        "x-operation-name": "findById",
        "tags": [
          "PurchaseReturnController"
        ],
        "responses": {
          "200": {
            "description": "PurchaseReturn model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReturnWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReturn.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "PurchaseReturnController.findById"
      },
      "delete": {
        "x-controller-name": "PurchaseReturnController",
        "x-operation-name": "deleteById",
        "tags": [
          "PurchaseReturnController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "PurchaseReturn DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "PurchaseReturnController.deleteById"
      }
    },
    "/purchase-return": {
      "post": {
        "x-controller-name": "PurchaseReturnController",
        "x-operation-name": "create",
        "tags": [
          "PurchaseReturnController"
        ],
        "responses": {
          "200": {
            "description": "PurchaseReturn model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReturn"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "number",
                  "date",
                  "duedate",
                  "itemtotal",
                  "grandtotal",
                  "purchaseinvoiceid",
                  "items"
                ],
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Unique invoice number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Purchase return date"
                  },
                  "duedate": {
                    "type": "string",
                    "format": "date",
                    "description": "Due date for payment"
                  },
                  "itemtotal": {
                    "type": "number",
                    "description": "Total amount of all items before tax",
                    "minimum": 0
                  },
                  "tax": {
                    "type": "number",
                    "description": "Total tax amount applied",
                    "minimum": 0,
                    "default": 0
                  },
                  "roundoff": {
                    "type": "number",
                    "description": "Round-off amount applied to the total",
                    "minimum": 0,
                    "default": 0
                  },
                  "grandtotal": {
                    "type": "number",
                    "description": "Final total payable amount",
                    "minimum": 0
                  },
                  "cprops": {
                    "type": "object",
                    "description": "Additional properties",
                    "default": {}
                  },
                  "sprops": {
                    "type": "object",
                    "description": "Additional properties",
                    "default": {}
                  },
                  "description": {
                    "type": "string",
                    "description": "Additional description or notes for the invoice",
                    "default": ""
                  },
                  "purchaseinvoiceid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the purchase invoice associated with the purchase return"
                  },
                  "items": {
                    "type": "array",
                    "description": "List of items in the purchase invoice",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "quantity",
                        "price",
                        "itemid",
                        "itemtotal",
                        "grandtotal"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the sale item"
                        },
                        "displayname": {
                          "type": "string",
                          "description": "Display name of the sale item",
                          "default": ""
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the sale item",
                          "default": ""
                        },
                        "order": {
                          "type": "number",
                          "description": "Order of the item in the invoice",
                          "minimum": 0
                        },
                        "code": {
                          "type": "string",
                          "description": "HSN code of the item"
                        },
                        "price": {
                          "type": "number",
                          "description": "Price per unit of the item",
                          "minimum": 0
                        },
                        "quantity": {
                          "type": "number",
                          "description": "Quantity of the item sold",
                          "minimum": 1
                        },
                        "itemtotal": {
                          "type": "number",
                          "description": "Total price before discount and tax",
                          "minimum": 0
                        },
                        "taxamount": {
                          "type": "number",
                          "description": "Total tax amount applied to the item",
                          "minimum": 0,
                          "default": 0
                        },
                        "grandtotal": {
                          "type": "number",
                          "description": "Final total after tax and discount",
                          "minimum": 0
                        },
                        "itemid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "ID of the item being sold"
                        },
                        "taxes": {
                          "type": "array",
                          "description": "List of taxes applied to the sale item",
                          "items": {
                            "type": "object",
                            "required": [
                              "name",
                              "shortname",
                              "rate",
                              "appliedto",
                              "amount",
                              "taxid"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Full name of the tax"
                              },
                              "shortname": {
                                "type": "string",
                                "description": "Short name or abbreviation of the tax"
                              },
                              "rate": {
                                "type": "number",
                                "description": "Tax rate percentage applied",
                                "minimum": 0
                              },
                              "appliedto": {
                                "type": "number",
                                "description": "Amount to which tax is applied",
                                "minimum": 0
                              },
                              "amount": {
                                "type": "number",
                                "description": "Total tax amount calculated",
                                "minimum": 0
                              },
                              "taxid": {
                                "type": "string",
                                "format": "uuid",
                                "description": "ID of the tax entity"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "PurchaseReturnController.create"
      },
      "get": {
        "x-controller-name": "PurchaseReturnController",
        "x-operation-name": "find",
        "tags": [
          "PurchaseReturnController"
        ],
        "responses": {
          "200": {
            "description": "Array of PurchaseReturn model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseReturnWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReturn.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "PurchaseReturnController.find"
      }
    },
    "/sale-invoice/count": {
      "get": {
        "x-controller-name": "SaleInvoiceController",
        "x-operation-name": "count",
        "tags": [
          "SaleInvoiceController"
        ],
        "responses": {
          "200": {
            "description": "SaleInvoice model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleInvoice.Filter"
                }
              }
            }
          }
        ],
        "operationId": "SaleInvoiceController.count"
      }
    },
    "/sale-invoice/{id}": {
      "patch": {
        "x-controller-name": "SaleInvoiceController",
        "x-operation-name": "updateById",
        "tags": [
          "SaleInvoiceController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "SaleInvoice PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Unique invoice number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Invoice date"
                  },
                  "duedate": {
                    "type": "string",
                    "format": "date",
                    "description": "Due date for payment"
                  },
                  "itemtotal": {
                    "type": "number",
                    "description": "Total amount of all items before discounts and tax",
                    "minimum": 0
                  },
                  "discount": {
                    "type": "number",
                    "description": "Discount applied to the invoice",
                    "minimum": 0,
                    "default": 0
                  },
                  "subtotal": {
                    "type": "number",
                    "description": "Subtotal after discount but before tax",
                    "minimum": 0
                  },
                  "tax": {
                    "type": "number",
                    "description": "Total tax amount applied",
                    "minimum": 0,
                    "default": 0
                  },
                  "roundoff": {
                    "type": "number",
                    "description": "Round-off amount applied to the total",
                    "minimum": 0,
                    "default": 0
                  },
                  "grandtotal": {
                    "type": "number",
                    "description": "Final total payable amount",
                    "minimum": 0
                  },
                  "currency": {
                    "type": "object",
                    "description": "Currency details used in the invoice"
                  },
                  "billingaddress": {
                    "type": "object",
                    "description": "Billing address details"
                  },
                  "shippingaddress": {
                    "type": "object",
                    "description": "Shipping address details"
                  },
                  "cprops": {
                    "type": "object",
                    "description": "Additional properties",
                    "default": {}
                  },
                  "description": {
                    "type": "string",
                    "description": "Additional description or notes for the invoice",
                    "default": ""
                  },
                  "customerid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the customer associated with the invoice"
                  },
                  "items": {
                    "type": "array",
                    "description": "List of items in the sale invoice",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "displayname",
                        "order",
                        "code",
                        "price",
                        "quantity",
                        "itemtotal",
                        "subtotal",
                        "grandtotal",
                        "itemid"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the sale item"
                        },
                        "displayname": {
                          "type": "string",
                          "description": "Display name of the sale item",
                          "default": ""
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the sale item",
                          "default": ""
                        },
                        "order": {
                          "type": "number",
                          "description": "Order of the item in the invoice",
                          "minimum": 0
                        },
                        "code": {
                          "type": "string",
                          "description": "HSN code of the item"
                        },
                        "price": {
                          "type": "number",
                          "description": "Price per unit of the item",
                          "minimum": 0
                        },
                        "quantity": {
                          "type": "number",
                          "description": "Quantity of the item sold",
                          "minimum": 1
                        },
                        "itemtotal": {
                          "type": "number",
                          "description": "Total price before discount and tax",
                          "minimum": 0
                        },
                        "discpercent": {
                          "type": "number",
                          "description": "Discount percentage applied to the item",
                          "minimum": 0,
                          "default": 0
                        },
                        "discamount": {
                          "type": "number",
                          "description": "Discount amount applied to the item",
                          "minimum": 0,
                          "default": 0
                        },
                        "subtotal": {
                          "type": "number",
                          "description": "Subtotal after discount but before tax",
                          "minimum": 0
                        },
                        "taxamount": {
                          "type": "number",
                          "description": "Total tax amount applied to the item",
                          "minimum": 0,
                          "default": 0
                        },
                        "grandtotal": {
                          "type": "number",
                          "description": "Final total after tax and discount",
                          "minimum": 0
                        },
                        "itemid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "ID of the item being sold"
                        },
                        "taxes": {
                          "type": "array",
                          "description": "List of taxes applied to the sale item",
                          "items": {
                            "type": "object",
                            "required": [
                              "name",
                              "shortname",
                              "rate",
                              "appliedto",
                              "amount",
                              "taxid"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Full name of the tax"
                              },
                              "shortname": {
                                "type": "string",
                                "description": "Short name or abbreviation of the tax"
                              },
                              "rate": {
                                "type": "number",
                                "description": "Tax rate percentage applied",
                                "minimum": 0
                              },
                              "appliedto": {
                                "type": "number",
                                "description": "Amount to which tax is applied",
                                "minimum": 0
                              },
                              "amount": {
                                "type": "number",
                                "description": "Total tax amount calculated",
                                "minimum": 0
                              },
                              "taxid": {
                                "type": "string",
                                "format": "uuid",
                                "description": "ID of the tax entity"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SaleInvoiceController.updateById"
      },
      "get": {
        "x-controller-name": "SaleInvoiceController",
        "x-operation-name": "findById",
        "tags": [
          "SaleInvoiceController"
        ],
        "responses": {
          "200": {
            "description": "SaleInvoice model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleInvoiceWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleInvoice.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "SaleInvoiceController.findById"
      },
      "delete": {
        "x-controller-name": "SaleInvoiceController",
        "x-operation-name": "deleteById",
        "tags": [
          "SaleInvoiceController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "SaleInvoice DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "SaleInvoiceController.deleteById"
      }
    },
    "/sale-invoice": {
      "post": {
        "x-controller-name": "SaleInvoiceController",
        "x-operation-name": "create",
        "tags": [
          "SaleInvoiceController"
        ],
        "responses": {
          "200": {
            "description": "SaleInvoice model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleInvoice"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "duedate",
                  "itemtotal",
                  "subtotal",
                  "grandtotal",
                  "currency",
                  "billingaddress",
                  "shippingaddress",
                  "customerid",
                  "items"
                ],
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Unique invoice number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Invoice date"
                  },
                  "duedate": {
                    "type": "string",
                    "format": "date",
                    "description": "Due date for payment"
                  },
                  "itemtotal": {
                    "type": "number",
                    "description": "Total amount of all items before discounts and tax",
                    "minimum": 0
                  },
                  "discount": {
                    "type": "number",
                    "description": "Discount applied to the invoice",
                    "minimum": 0,
                    "default": 0
                  },
                  "subtotal": {
                    "type": "number",
                    "description": "Subtotal after discount but before tax",
                    "minimum": 0
                  },
                  "tax": {
                    "type": "number",
                    "description": "Total tax amount applied",
                    "minimum": 0,
                    "default": 0
                  },
                  "roundoff": {
                    "type": "number",
                    "description": "Round-off amount applied to the total",
                    "minimum": 0,
                    "default": 0
                  },
                  "grandtotal": {
                    "type": "number",
                    "description": "Final total payable amount",
                    "minimum": 0
                  },
                  "currency": {
                    "type": "object",
                    "description": "Currency details used in the invoice"
                  },
                  "billingaddress": {
                    "type": "object",
                    "description": "Billing address details"
                  },
                  "shippingaddress": {
                    "type": "object",
                    "description": "Shipping address details"
                  },
                  "cprops": {
                    "type": "object",
                    "description": "Additional properties",
                    "default": {}
                  },
                  "description": {
                    "type": "string",
                    "description": "Additional description or notes for the invoice",
                    "default": ""
                  },
                  "customerid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the customer associated with the invoice"
                  },
                  "items": {
                    "type": "array",
                    "description": "List of items in the sale invoice",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "displayname",
                        "order",
                        "code",
                        "price",
                        "quantity",
                        "itemtotal",
                        "subtotal",
                        "grandtotal",
                        "itemid"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the sale item"
                        },
                        "displayname": {
                          "type": "string",
                          "description": "Display name of the sale item",
                          "default": ""
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the sale item",
                          "default": ""
                        },
                        "order": {
                          "type": "number",
                          "description": "Order of the item in the invoice",
                          "minimum": 0
                        },
                        "code": {
                          "type": "string",
                          "description": "HSN code of the item"
                        },
                        "price": {
                          "type": "number",
                          "description": "Price per unit of the item",
                          "minimum": 0
                        },
                        "quantity": {
                          "type": "number",
                          "description": "Quantity of the item sold",
                          "minimum": 1
                        },
                        "itemtotal": {
                          "type": "number",
                          "description": "Total price before discount and tax",
                          "minimum": 0
                        },
                        "discpercent": {
                          "type": "number",
                          "description": "Discount percentage applied to the item",
                          "minimum": 0,
                          "default": 0
                        },
                        "discamount": {
                          "type": "number",
                          "description": "Discount amount applied to the item",
                          "minimum": 0,
                          "default": 0
                        },
                        "subtotal": {
                          "type": "number",
                          "description": "Subtotal after discount but before tax",
                          "minimum": 0
                        },
                        "taxamount": {
                          "type": "number",
                          "description": "Total tax amount applied to the item",
                          "minimum": 0,
                          "default": 0
                        },
                        "grandtotal": {
                          "type": "number",
                          "description": "Final total after tax and discount",
                          "minimum": 0
                        },
                        "itemid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "ID of the item being sold"
                        },
                        "taxes": {
                          "type": "array",
                          "description": "List of taxes applied to the sale item",
                          "items": {
                            "type": "object",
                            "required": [
                              "name",
                              "shortname",
                              "rate",
                              "appliedto",
                              "amount",
                              "taxid"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Full name of the tax"
                              },
                              "shortname": {
                                "type": "string",
                                "description": "Short name or abbreviation of the tax"
                              },
                              "rate": {
                                "type": "number",
                                "description": "Tax rate percentage applied",
                                "minimum": 0
                              },
                              "appliedto": {
                                "type": "number",
                                "description": "Amount to which tax is applied",
                                "minimum": 0
                              },
                              "amount": {
                                "type": "number",
                                "description": "Total tax amount calculated",
                                "minimum": 0
                              },
                              "taxid": {
                                "type": "string",
                                "format": "uuid",
                                "description": "ID of the tax entity"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "SaleInvoiceController.create"
      },
      "get": {
        "x-controller-name": "SaleInvoiceController",
        "x-operation-name": "find",
        "tags": [
          "SaleInvoiceController"
        ],
        "responses": {
          "200": {
            "description": "Array of SaleInvoice model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaleInvoiceWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleInvoice.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "SaleInvoiceController.find"
      }
    },
    "/stored-document/count": {
      "get": {
        "x-controller-name": "StoredDocumentController",
        "x-operation-name": "count",
        "tags": [
          "StoredDocumentController"
        ],
        "responses": {
          "200": {
            "description": "StoredDocument model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDocument.Filter"
                }
              }
            }
          }
        ],
        "operationId": "StoredDocumentController.count"
      }
    },
    "/stored-document/{id}": {
      "patch": {
        "x-controller-name": "StoredDocumentController",
        "x-operation-name": "updateById",
        "tags": [
          "StoredDocumentController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "StoredDocument PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "StoredDocumentController.updateById"
      },
      "get": {
        "x-controller-name": "StoredDocumentController",
        "x-operation-name": "findById",
        "tags": [
          "StoredDocumentController"
        ],
        "responses": {
          "200": {
            "description": "StoredDocument model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDocumentWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDocument.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "StoredDocumentController.findById"
      },
      "delete": {
        "x-controller-name": "StoredDocumentController",
        "x-operation-name": "deleteById",
        "tags": [
          "StoredDocumentController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "StoredDocument DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "StoredDocumentController.deleteById"
      }
    },
    "/stored-document": {
      "post": {
        "x-controller-name": "StoredDocumentController",
        "x-operation-name": "create",
        "tags": [
          "StoredDocumentController"
        ],
        "responses": {
          "200": {
            "description": "StoredDocument model instance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "category": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "props": {
                      "type": "object"
                    },
                    "createdat": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "addedbyid": {
                      "type": "string"
                    },
                    "organizationid": {
                      "type": "string"
                    },
                    "putUrl": {
                      "type": "string",
                      "description": "Pre-signed URL for uploading the document"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Document"
              }
            }
          }
        },
        "operationId": "StoredDocumentController.create"
      },
      "get": {
        "x-controller-name": "StoredDocumentController",
        "x-operation-name": "find",
        "tags": [
          "StoredDocumentController"
        ],
        "responses": {
          "200": {
            "description": "Array of StoredDocument model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoredDocumentWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDocument.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "StoredDocumentController.find"
      }
    },
    "/subscription/count": {
      "get": {
        "x-controller-name": "SubscriptionController",
        "x-operation-name": "count",
        "tags": [
          "SubscriptionController"
        ],
        "responses": {
          "200": {
            "description": "Subscription model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription.Filter"
                }
              }
            }
          }
        ],
        "operationId": "SubscriptionController.count"
      }
    },
    "/subscription/{id}": {
      "patch": {
        "x-controller-name": "SubscriptionController",
        "x-operation-name": "updateById",
        "tags": [
          "SubscriptionController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Subscription PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SubscriptionController.updateById"
      },
      "get": {
        "x-controller-name": "SubscriptionController",
        "x-operation-name": "findById",
        "tags": [
          "SubscriptionController"
        ],
        "responses": {
          "200": {
            "description": "Subscription model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "SubscriptionController.findById"
      },
      "delete": {
        "x-controller-name": "SubscriptionController",
        "x-operation-name": "deleteById",
        "tags": [
          "SubscriptionController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Subscription DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "SubscriptionController.deleteById"
      }
    },
    "/subscription": {
      "post": {
        "x-controller-name": "SubscriptionController",
        "x-operation-name": "create",
        "tags": [
          "SubscriptionController"
        ],
        "responses": {
          "200": {
            "description": "Subscription model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Subscription"
              }
            }
          }
        },
        "operationId": "SubscriptionController.create"
      },
      "get": {
        "x-controller-name": "SubscriptionController",
        "x-operation-name": "find",
        "tags": [
          "SubscriptionController"
        ],
        "responses": {
          "200": {
            "description": "Array of Subscription model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "SubscriptionController.find"
      }
    },
    "/subscription-plan/count": {
      "get": {
        "x-controller-name": "SubscriptionPlanController",
        "x-operation-name": "count",
        "tags": [
          "SubscriptionPlanController"
        ],
        "responses": {
          "200": {
            "description": "SubscriptionPlan model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPlan.Filter"
                }
              }
            }
          }
        ],
        "operationId": "SubscriptionPlanController.count"
      }
    },
    "/subscription-plan/{id}": {
      "patch": {
        "x-controller-name": "SubscriptionPlanController",
        "x-operation-name": "updateById",
        "tags": [
          "SubscriptionPlanController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "SubscriptionPlan PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPlanPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SubscriptionPlanController.updateById"
      },
      "get": {
        "x-controller-name": "SubscriptionPlanController",
        "x-operation-name": "findById",
        "tags": [
          "SubscriptionPlanController"
        ],
        "responses": {
          "200": {
            "description": "SubscriptionPlan model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPlanWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPlan.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "SubscriptionPlanController.findById"
      },
      "delete": {
        "x-controller-name": "SubscriptionPlanController",
        "x-operation-name": "deleteById",
        "tags": [
          "SubscriptionPlanController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "SubscriptionPlan DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "SubscriptionPlanController.deleteById"
      }
    },
    "/subscription-plan": {
      "post": {
        "x-controller-name": "SubscriptionPlanController",
        "x-operation-name": "create",
        "tags": [
          "SubscriptionPlanController"
        ],
        "responses": {
          "200": {
            "description": "SubscriptionPlan model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPlan"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New SubscriptionPlan"
              }
            }
          }
        },
        "operationId": "SubscriptionPlanController.create"
      },
      "get": {
        "x-controller-name": "SubscriptionPlanController",
        "x-operation-name": "find",
        "tags": [
          "SubscriptionPlanController"
        ],
        "responses": {
          "200": {
            "description": "Array of SubscriptionPlan model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionPlanWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPlan.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "SubscriptionPlanController.find"
      }
    },
    "/tax/count": {
      "get": {
        "x-controller-name": "TaxController",
        "x-operation-name": "count",
        "tags": [
          "TaxController"
        ],
        "responses": {
          "200": {
            "description": "Tax model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TaxController.count"
      }
    },
    "/tax/{id}": {
      "patch": {
        "x-controller-name": "TaxController",
        "x-operation-name": "updateById",
        "tags": [
          "TaxController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Tax PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "TaxController.updateById"
      },
      "get": {
        "x-controller-name": "TaxController",
        "x-operation-name": "findById",
        "tags": [
          "TaxController"
        ],
        "responses": {
          "200": {
            "description": "Tax model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "TaxController.findById"
      },
      "delete": {
        "x-controller-name": "TaxController",
        "x-operation-name": "deleteById",
        "tags": [
          "TaxController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Tax DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TaxController.deleteById"
      }
    },
    "/tax": {
      "post": {
        "x-controller-name": "TaxController",
        "x-operation-name": "create",
        "tags": [
          "TaxController"
        ],
        "responses": {
          "200": {
            "description": "Tax model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Tax"
              }
            }
          }
        },
        "operationId": "TaxController.create"
      },
      "get": {
        "x-controller-name": "TaxController",
        "x-operation-name": "find",
        "tags": [
          "TaxController"
        ],
        "responses": {
          "200": {
            "description": "Array of Tax model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "TaxController.find"
      }
    },
    "/user/count": {
      "get": {
        "x-controller-name": "UserController",
        "x-operation-name": "count",
        "tags": [
          "UserController"
        ],
        "responses": {
          "200": {
            "description": "User model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User.Filter"
                }
              }
            }
          }
        ],
        "operationId": "UserController.count"
      }
    },
    "/user/{id}": {
      "patch": {
        "x-controller-name": "UserController",
        "x-operation-name": "updateById",
        "tags": [
          "UserController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "User PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "UserController.updateById"
      },
      "get": {
        "x-controller-name": "UserController",
        "x-operation-name": "findById",
        "tags": [
          "UserController"
        ],
        "responses": {
          "200": {
            "description": "User model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "UserController.findById"
      },
      "delete": {
        "x-controller-name": "UserController",
        "x-operation-name": "deleteById",
        "tags": [
          "UserController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "User DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "UserController.deleteById"
      }
    },
    "/user": {
      "post": {
        "x-controller-name": "UserController",
        "x-operation-name": "create",
        "tags": [
          "UserController"
        ],
        "responses": {
          "200": {
            "description": "User model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New User"
              }
            }
          }
        },
        "operationId": "UserController.create"
      },
      "get": {
        "x-controller-name": "UserController",
        "x-operation-name": "find",
        "tags": [
          "UserController"
        ],
        "responses": {
          "200": {
            "description": "Array of User model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "UserController.find"
      }
    },
    "/user-session/select-branch": {
      "post": {
        "x-controller-name": "UserSessionController",
        "x-operation-name": "selectBranch",
        "tags": [
          "UserSessionController"
        ],
        "responses": {
          "200": {
            "description": "UserSession model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSession"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "branchid": {
                    "type": "string"
                  }
                },
                "required": [
                  "branchid"
                ]
              }
            }
          },
          "description": "Input data containing branchId",
          "required": true
        },
        "operationId": "UserSessionController.selectBranch"
      }
    },
    "/user-session/select-fiscal-year": {
      "post": {
        "x-controller-name": "UserSessionController",
        "x-operation-name": "selectFiscalYear",
        "tags": [
          "UserSessionController"
        ],
        "responses": {
          "200": {
            "description": "UserSession model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSession"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fiscalyearid": {
                    "type": "string"
                  }
                },
                "required": [
                  "fiscalyearid"
                ]
              }
            }
          },
          "description": "Input data containing fiscalYearId",
          "required": true
        },
        "operationId": "UserSessionController.selectFiscalYear"
      }
    },
    "/user-session/select-organization": {
      "post": {
        "x-controller-name": "UserSessionController",
        "x-operation-name": "selectOrganization",
        "tags": [
          "UserSessionController"
        ],
        "responses": {
          "200": {
            "description": "UserSession model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSession"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizationid": {
                    "type": "string"
                  }
                },
                "required": [
                  "organizationid"
                ]
              }
            }
          },
          "description": "Input data containing organizationId",
          "required": true
        },
        "operationId": "UserSessionController.selectOrganization"
      }
    },
    "/user-session/{id}": {
      "delete": {
        "x-controller-name": "UserSessionController",
        "x-operation-name": "deleteById",
        "tags": [
          "UserSessionController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "UserSession DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "UserSessionController.deleteById"
      }
    },
    "/user-session": {
      "post": {
        "x-controller-name": "UserSessionController",
        "x-operation-name": "create",
        "tags": [
          "UserSessionController"
        ],
        "responses": {
          "200": {
            "description": "UserSession model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSession"
                }
              }
            }
          }
        },
        "operationId": "UserSessionController.create"
      }
    },
    "/vendor/count": {
      "get": {
        "x-controller-name": "VendorController",
        "x-operation-name": "count",
        "tags": [
          "VendorController"
        ],
        "responses": {
          "200": {
            "description": "Vendor model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor.Filter"
                }
              }
            }
          }
        ],
        "operationId": "VendorController.count"
      }
    },
    "/vendor/{id}": {
      "patch": {
        "x-controller-name": "VendorController",
        "x-operation-name": "updateById",
        "tags": [
          "VendorController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Vendor PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "VendorController.updateById"
      },
      "get": {
        "x-controller-name": "VendorController",
        "x-operation-name": "findById",
        "tags": [
          "VendorController"
        ],
        "responses": {
          "200": {
            "description": "Vendor model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "VendorController.findById"
      },
      "delete": {
        "x-controller-name": "VendorController",
        "x-operation-name": "deleteById",
        "tags": [
          "VendorController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Vendor DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "VendorController.deleteById"
      }
    },
    "/vendor": {
      "post": {
        "x-controller-name": "VendorController",
        "x-operation-name": "create",
        "tags": [
          "VendorController"
        ],
        "responses": {
          "200": {
            "description": "Vendor model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Vendor"
              }
            }
          }
        },
        "operationId": "VendorController.create"
      },
      "get": {
        "x-controller-name": "VendorController",
        "x-operation-name": "find",
        "tags": [
          "VendorController"
        ],
        "responses": {
          "200": {
            "description": "Array of Vendor model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "VendorController.find"
      }
    },
    "/vendor-payment/count": {
      "get": {
        "x-controller-name": "VendorPaymentController",
        "x-operation-name": "count",
        "tags": [
          "VendorPaymentController"
        ],
        "responses": {
          "200": {
            "description": "VendorPayment model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPayment.Filter"
                }
              }
            }
          }
        ],
        "operationId": "VendorPaymentController.count"
      }
    },
    "/vendor-payment/{id}": {
      "patch": {
        "x-controller-name": "VendorPaymentController",
        "x-operation-name": "updateById",
        "tags": [
          "VendorPaymentController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "VendorPayment PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "amount": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "html": {
                        "type": "string"
                      },
                      "unicode": {
                        "type": "string"
                      },
                      "decimal": {
                        "type": "number"
                      }
                    }
                  },
                  "cprops": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "sprops": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "vendorid": {
                    "type": "string"
                  },
                  "bcashid": {
                    "type": "string"
                  },
                  "invoices": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "purchaseinvoiceid": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "VendorPaymentController.updateById"
      },
      "get": {
        "x-controller-name": "VendorPaymentController",
        "x-operation-name": "findById",
        "tags": [
          "VendorPaymentController"
        ],
        "responses": {
          "200": {
            "description": "VendorPayment model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPaymentWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPayment.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "VendorPaymentController.findById"
      },
      "delete": {
        "x-controller-name": "VendorPaymentController",
        "x-operation-name": "deleteById",
        "tags": [
          "VendorPaymentController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "VendorPayment DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "VendorPaymentController.deleteById"
      }
    },
    "/vendor-payment": {
      "post": {
        "x-controller-name": "VendorPaymentController",
        "x-operation-name": "create",
        "tags": [
          "VendorPaymentController"
        ],
        "responses": {
          "200": {
            "description": "VendorPayment model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPayment"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "amount",
                  "currency",
                  "vendorid"
                ],
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "amount": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "html": {
                        "type": "string"
                      },
                      "unicode": {
                        "type": "string"
                      },
                      "decimal": {
                        "type": "number"
                      }
                    }
                  },
                  "cprops": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "sprops": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "vendorid": {
                    "type": "string"
                  },
                  "bcashid": {
                    "type": "string"
                  },
                  "invoices": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "purchaseinvoiceid": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "operationId": "VendorPaymentController.create"
      },
      "get": {
        "x-controller-name": "VendorPaymentController",
        "x-operation-name": "find",
        "tags": [
          "VendorPaymentController"
        ],
        "responses": {
          "200": {
            "description": "Array of VendorPayment model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorPaymentWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPayment.Filter2"
                }
              }
            }
          }
        ],
        "operationId": "VendorPaymentController.find"
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001"
    }
  ],
  "components": {
    "schemas": {
      "VendorPayment": {
        "title": "VendorPayment",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "object"
          },
          "cprops": {
            "type": "object"
          },
          "sprops": {
            "type": "object"
          },
          "vendorid": {
            "type": "string"
          },
          "bcashid": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          }
        },
        "required": [
          "date",
          "currency",
          "branchid"
        ],
        "additionalProperties": false
      },
      "VendorPaymentWithRelations": {
        "title": "VendorPaymentWithRelations",
        "type": "object",
        "description": "(tsType: VendorPaymentWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "object"
          },
          "cprops": {
            "type": "object"
          },
          "sprops": {
            "type": "object"
          },
          "vendorid": {
            "type": "string"
          },
          "bcashid": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorWithRelations"
          },
          "foreignKey": {},
          "bcash": {
            "$ref": "#/components/schemas/BankCashWithRelations"
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseInvoicePaymentWithRelations"
            }
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          }
        },
        "required": [
          "date",
          "currency",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "VendorPaymentWithRelations"
      },
      "CustomerReceipt": {
        "title": "CustomerReceipt",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "object"
          },
          "cprops": {
            "type": "object"
          },
          "sprops": {
            "type": "object"
          },
          "customerid": {
            "type": "string"
          },
          "bcashid": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          }
        },
        "required": [
          "date",
          "currency",
          "branchid"
        ],
        "additionalProperties": false
      },
      "BranchWithRelations": {
        "title": "BranchWithRelations",
        "type": "object",
        "description": "(tsType: BranchWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "country": {
            "type": "object"
          },
          "state": {
            "type": "string"
          },
          "fiscalstart": {
            "type": "string"
          },
          "gstin": {
            "type": "string"
          },
          "invnumber": {
            "type": "string"
          },
          "organizationid": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationWithRelations"
          },
          "foreignKey": {},
          "fiscalyears": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FiscalYearWithRelations"
            }
          }
        },
        "required": [
          "name",
          "email",
          "fiscalstart"
        ],
        "additionalProperties": false,
        "x-typescript-type": "BranchWithRelations"
      },
      "TaxWithRelations": {
        "title": "TaxWithRelations",
        "type": "object",
        "description": "(tsType: TaxWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shortname": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "appliedto": {
            "type": "number"
          },
          "branchid": {
            "type": "string"
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          },
          "foreignKey": {}
        },
        "required": [
          "name",
          "shortname",
          "rate",
          "appliedto",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TaxWithRelations"
      },
      "SaleItemTaxWithRelations": {
        "title": "SaleItemTaxWithRelations",
        "type": "object",
        "description": "(tsType: SaleItemTaxWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shortname": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "appliedto": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "saleitemid": {
            "type": "string"
          },
          "taxid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          },
          "saleitem": {
            "$ref": "#/components/schemas/SaleItemWithRelations"
          },
          "foreignKey": {},
          "tax": {
            "$ref": "#/components/schemas/TaxWithRelations"
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          }
        },
        "required": [
          "name",
          "shortname",
          "rate",
          "appliedto",
          "amount",
          "saleitemid",
          "taxid",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "SaleItemTaxWithRelations"
      },
      "CustomerWithRelations": {
        "title": "CustomerWithRelations",
        "type": "object",
        "description": "(tsType: CustomerWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "gstin": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "currency": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "branchid": {
            "type": "string"
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          },
          "foreignKey": {}
        },
        "required": [
          "name",
          "address",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "CustomerWithRelations"
      },
      "ItemCategoryWithRelations": {
        "title": "ItemCategoryWithRelations",
        "type": "object",
        "description": "(tsType: ItemCategoryWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "parentid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/ItemCategoryWithRelations"
          },
          "foreignKey": {},
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          }
        },
        "required": [
          "name",
          "code",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ItemCategoryWithRelations"
      },
      "ItemWithRelations": {
        "title": "ItemWithRelations",
        "type": "object",
        "description": "(tsType: ItemWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "displayname": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Product",
              "Service"
            ]
          },
          "barcode": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "purchaseledger": {
            "type": "string"
          },
          "salesledger": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "categoryid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/ItemCategoryWithRelations"
          },
          "foreignKey": {},
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          }
        },
        "required": [
          "name",
          "code",
          "displayname",
          "type",
          "categoryid",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ItemWithRelations"
      },
      "SaleItemWithRelations": {
        "title": "SaleItemWithRelations",
        "type": "object",
        "description": "(tsType: SaleItemWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "displayname": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "order": {
            "type": "number"
          },
          "code": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "itemtotal": {
            "type": "number"
          },
          "discpercent": {
            "type": "number"
          },
          "discamount": {
            "type": "number"
          },
          "subtotal": {
            "type": "number"
          },
          "taxamount": {
            "type": "number"
          },
          "grandtotal": {
            "type": "number"
          },
          "saleinvoiceid": {
            "type": "string"
          },
          "itemid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          },
          "taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItemTaxWithRelations"
            }
          },
          "saleinvoice": {
            "$ref": "#/components/schemas/SaleInvoiceWithRelations"
          },
          "foreignKey": {},
          "item": {
            "$ref": "#/components/schemas/ItemWithRelations"
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          }
        },
        "required": [
          "name",
          "displayname",
          "order",
          "code",
          "price",
          "quantity",
          "itemtotal",
          "subtotal",
          "grandtotal",
          "saleinvoiceid",
          "itemid",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "SaleItemWithRelations"
      },
      "BankCashWithRelations": {
        "title": "BankCashWithRelations",
        "type": "object",
        "description": "(tsType: BankCashWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "branchid": {
            "type": "string"
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          },
          "foreignKey": {}
        },
        "required": [
          "name",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "BankCashWithRelations"
      },
      "SaleInvoiceWithRelations": {
        "title": "SaleInvoiceWithRelations",
        "type": "object",
        "description": "(tsType: SaleInvoiceWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "duedate": {
            "type": "string",
            "format": "date"
          },
          "itemtotal": {
            "type": "number"
          },
          "discount": {
            "type": "number"
          },
          "subtotal": {
            "type": "number"
          },
          "tax": {
            "type": "number"
          },
          "roundoff": {
            "type": "number"
          },
          "grandtotal": {
            "type": "number"
          },
          "currency": {
            "type": "object"
          },
          "billingaddress": {
            "type": "object"
          },
          "shippingaddress": {
            "type": "object"
          },
          "cprops": {
            "type": "object"
          },
          "sprops": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "customerid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerWithRelations"
          },
          "foreignKey": {},
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItemWithRelations"
            }
          },
          "receipts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleInvoiceReceiptWithRelations"
            }
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          }
        },
        "required": [
          "number",
          "date",
          "duedate",
          "itemtotal",
          "subtotal",
          "grandtotal",
          "currency",
          "billingaddress",
          "shippingaddress",
          "customerid",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "SaleInvoiceWithRelations"
      },
      "SaleInvoiceReceiptWithRelations": {
        "title": "SaleInvoiceReceiptWithRelations",
        "type": "object",
        "description": "(tsType: SaleInvoiceReceiptWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "customerreceiptid": {
            "type": "string"
          },
          "saleinvoiceid": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "branchid": {
            "type": "string"
          },
          "customerreceipt": {
            "$ref": "#/components/schemas/CustomerReceiptWithRelations"
          },
          "foreignKey": {},
          "saleinvoice": {
            "$ref": "#/components/schemas/SaleInvoiceWithRelations"
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          }
        },
        "required": [
          "customerreceiptid",
          "saleinvoiceid",
          "amount",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "SaleInvoiceReceiptWithRelations"
      },
      "CustomerReceiptWithRelations": {
        "title": "CustomerReceiptWithRelations",
        "type": "object",
        "description": "(tsType: CustomerReceiptWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "object"
          },
          "cprops": {
            "type": "object"
          },
          "sprops": {
            "type": "object"
          },
          "customerid": {
            "type": "string"
          },
          "bcashid": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerWithRelations"
          },
          "foreignKey": {},
          "bcash": {
            "$ref": "#/components/schemas/BankCashWithRelations"
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleInvoiceReceiptWithRelations"
            }
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          }
        },
        "required": [
          "date",
          "currency",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "CustomerReceiptWithRelations"
      },
      "PurchaseReturn": {
        "title": "PurchaseReturn",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "duedate": {
            "type": "string",
            "format": "date"
          },
          "itemtotal": {
            "type": "number"
          },
          "tax": {
            "type": "number"
          },
          "roundoff": {
            "type": "number"
          },
          "grandtotal": {
            "type": "number"
          },
          "cprops": {
            "type": "object"
          },
          "sprops": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "purchaseinvoiceid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          }
        },
        "required": [
          "number",
          "date",
          "duedate",
          "itemtotal",
          "grandtotal",
          "purchaseinvoiceid",
          "branchid"
        ],
        "additionalProperties": false
      },
      "PurchaseReturnItemTaxWithRelations": {
        "title": "PurchaseReturnItemTaxWithRelations",
        "type": "object",
        "description": "(tsType: PurchaseReturnItemTaxWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shortname": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "appliedto": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "purchasereturnitemid": {
            "type": "string"
          },
          "taxid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          },
          "purchasereturnitem": {
            "$ref": "#/components/schemas/PurchaseReturnItemWithRelations"
          },
          "foreignKey": {},
          "tax": {
            "$ref": "#/components/schemas/TaxWithRelations"
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          }
        },
        "required": [
          "name",
          "shortname",
          "rate",
          "appliedto",
          "amount",
          "purchasereturnitemid",
          "taxid",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "PurchaseReturnItemTaxWithRelations"
      },
      "VendorWithRelations": {
        "title": "VendorWithRelations",
        "type": "object",
        "description": "(tsType: VendorWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "gstin": {
            "type": "string"
          },
          "pan": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "currency": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "branchid": {
            "type": "string"
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          },
          "foreignKey": {}
        },
        "required": [
          "name",
          "address",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "VendorWithRelations"
      },
      "PurchaseItemTaxWithRelations": {
        "title": "PurchaseItemTaxWithRelations",
        "type": "object",
        "description": "(tsType: PurchaseItemTaxWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shortname": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "appliedto": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "purchaseitemid": {
            "type": "string"
          },
          "taxid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          },
          "purchaseitem": {
            "$ref": "#/components/schemas/PurchaseItemWithRelations"
          },
          "foreignKey": {},
          "tax": {
            "$ref": "#/components/schemas/TaxWithRelations"
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          }
        },
        "required": [
          "name",
          "shortname",
          "rate",
          "appliedto",
          "amount",
          "purchaseitemid",
          "taxid",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "PurchaseItemTaxWithRelations"
      },
      "PurchaseItemWithRelations": {
        "title": "PurchaseItemWithRelations",
        "type": "object",
        "description": "(tsType: PurchaseItemWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "displayname": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "order": {
            "type": "number"
          },
          "code": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "itemtotal": {
            "type": "number"
          },
          "discpercent": {
            "type": "number"
          },
          "discamount": {
            "type": "number"
          },
          "subtotal": {
            "type": "number"
          },
          "taxamount": {
            "type": "number"
          },
          "grandtotal": {
            "type": "number"
          },
          "purchaseinvoiceid": {
            "type": "string"
          },
          "itemid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          },
          "taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseItemTaxWithRelations"
            }
          },
          "purchaseinvoice": {
            "$ref": "#/components/schemas/PurchaseInvoiceWithRelations"
          },
          "foreignKey": {},
          "item": {
            "$ref": "#/components/schemas/ItemWithRelations"
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          }
        },
        "required": [
          "name",
          "displayname",
          "order",
          "code",
          "price",
          "quantity",
          "itemtotal",
          "subtotal",
          "grandtotal",
          "purchaseinvoiceid",
          "itemid",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "PurchaseItemWithRelations"
      },
      "PurchaseInvoicePaymentWithRelations": {
        "title": "PurchaseInvoicePaymentWithRelations",
        "type": "object",
        "description": "(tsType: PurchaseInvoicePaymentWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "purchaseinvoiceid": {
            "type": "string"
          },
          "vendorpaymentid": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "branchid": {
            "type": "string"
          },
          "purchaseinvoice": {
            "$ref": "#/components/schemas/PurchaseInvoiceWithRelations"
          },
          "foreignKey": {},
          "vendorpayment": {
            "$ref": "#/components/schemas/VendorPaymentWithRelations"
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          }
        },
        "required": [
          "purchaseinvoiceid",
          "vendorpaymentid",
          "amount",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "PurchaseInvoicePaymentWithRelations"
      },
      "PurchaseInvoiceWithRelations": {
        "title": "PurchaseInvoiceWithRelations",
        "type": "object",
        "description": "(tsType: PurchaseInvoiceWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "duedate": {
            "type": "string",
            "format": "date"
          },
          "currency": {
            "type": "object"
          },
          "itemtotal": {
            "type": "number"
          },
          "discount": {
            "type": "number"
          },
          "subtotal": {
            "type": "number"
          },
          "tax": {
            "type": "number"
          },
          "roundoff": {
            "type": "number"
          },
          "grandtotal": {
            "type": "number"
          },
          "billingaddress": {
            "type": "object"
          },
          "shippingaddress": {
            "type": "object"
          },
          "cprops": {
            "type": "object"
          },
          "sprops": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "vendorid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorWithRelations"
          },
          "foreignKey": {},
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseItemWithRelations"
            }
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseInvoicePaymentWithRelations"
            }
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          }
        },
        "required": [
          "number",
          "date",
          "duedate",
          "currency",
          "itemtotal",
          "subtotal",
          "grandtotal",
          "billingaddress",
          "shippingaddress",
          "vendorid",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "PurchaseInvoiceWithRelations"
      },
      "PurchaseReturnItemWithRelations": {
        "title": "PurchaseReturnItemWithRelations",
        "type": "object",
        "description": "(tsType: PurchaseReturnItemWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "displayname": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "order": {
            "type": "number"
          },
          "code": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "itemtotal": {
            "type": "number"
          },
          "taxamount": {
            "type": "number"
          },
          "grandtotal": {
            "type": "number"
          },
          "purchasereturnid": {
            "type": "string"
          },
          "itemid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          },
          "taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseReturnItemTaxWithRelations"
            }
          },
          "purchasereturn": {
            "$ref": "#/components/schemas/PurchaseReturnWithRelations"
          },
          "foreignKey": {},
          "item": {
            "$ref": "#/components/schemas/ItemWithRelations"
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          }
        },
        "required": [
          "name",
          "displayname",
          "order",
          "code",
          "price",
          "quantity",
          "itemtotal",
          "grandtotal",
          "purchasereturnid",
          "itemid",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "PurchaseReturnItemWithRelations"
      },
      "PurchaseReturnWithRelations": {
        "title": "PurchaseReturnWithRelations",
        "type": "object",
        "description": "(tsType: PurchaseReturnWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "duedate": {
            "type": "string",
            "format": "date"
          },
          "itemtotal": {
            "type": "number"
          },
          "tax": {
            "type": "number"
          },
          "roundoff": {
            "type": "number"
          },
          "grandtotal": {
            "type": "number"
          },
          "cprops": {
            "type": "object"
          },
          "sprops": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "purchaseinvoiceid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          },
          "purchaseinvoice": {
            "$ref": "#/components/schemas/PurchaseInvoiceWithRelations"
          },
          "foreignKey": {},
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseReturnItemWithRelations"
            }
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          }
        },
        "required": [
          "number",
          "date",
          "duedate",
          "itemtotal",
          "grandtotal",
          "purchaseinvoiceid",
          "branchid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "PurchaseReturnWithRelations"
      },
      "PurchaseInvoice": {
        "title": "PurchaseInvoice",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "duedate": {
            "type": "string",
            "format": "date"
          },
          "currency": {
            "type": "object"
          },
          "itemtotal": {
            "type": "number"
          },
          "discount": {
            "type": "number"
          },
          "subtotal": {
            "type": "number"
          },
          "tax": {
            "type": "number"
          },
          "roundoff": {
            "type": "number"
          },
          "grandtotal": {
            "type": "number"
          },
          "billingaddress": {
            "type": "object"
          },
          "shippingaddress": {
            "type": "object"
          },
          "cprops": {
            "type": "object"
          },
          "sprops": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "vendorid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          }
        },
        "required": [
          "number",
          "date",
          "duedate",
          "currency",
          "itemtotal",
          "subtotal",
          "grandtotal",
          "billingaddress",
          "shippingaddress",
          "vendorid",
          "branchid"
        ],
        "additionalProperties": false
      },
      "SaleInvoice": {
        "title": "SaleInvoice",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "duedate": {
            "type": "string",
            "format": "date"
          },
          "itemtotal": {
            "type": "number"
          },
          "discount": {
            "type": "number"
          },
          "subtotal": {
            "type": "number"
          },
          "tax": {
            "type": "number"
          },
          "roundoff": {
            "type": "number"
          },
          "grandtotal": {
            "type": "number"
          },
          "currency": {
            "type": "object"
          },
          "billingaddress": {
            "type": "object"
          },
          "shippingaddress": {
            "type": "object"
          },
          "cprops": {
            "type": "object"
          },
          "sprops": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "customerid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          }
        },
        "required": [
          "number",
          "date",
          "duedate",
          "itemtotal",
          "subtotal",
          "grandtotal",
          "currency",
          "billingaddress",
          "shippingaddress",
          "customerid",
          "branchid"
        ],
        "additionalProperties": false
      },
      "Vendor": {
        "title": "Vendor",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "gstin": {
            "type": "string"
          },
          "pan": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "currency": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "branchid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "address",
          "branchid"
        ],
        "additionalProperties": false
      },
      "New Vendor": {
        "title": "New Vendor",
        "type": "object",
        "description": "(tsType: Omit<Vendor, 'id' | 'branchid'>, schemaOptions: { title: 'New Vendor', exclude: [ 'id', 'branchid' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "gstin": {
            "type": "string"
          },
          "pan": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "currency": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "address"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Vendor, 'id' | 'branchid'>"
      },
      "VendorPartial": {
        "title": "VendorPartial",
        "type": "object",
        "description": "(tsType: Partial<Vendor>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "gstin": {
            "type": "string"
          },
          "pan": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "currency": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "branchid": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Vendor>"
      },
      "Customer": {
        "title": "Customer",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "gstin": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "currency": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "branchid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "address",
          "branchid"
        ],
        "additionalProperties": false
      },
      "New Customer": {
        "title": "New Customer",
        "type": "object",
        "description": "(tsType: Omit<Customer, 'id' | 'branchid'>, schemaOptions: { title: 'New Customer', exclude: [ 'id', 'branchid' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "gstin": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "currency": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "address"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Customer, 'id' | 'branchid'>"
      },
      "CustomerPartial": {
        "title": "CustomerPartial",
        "type": "object",
        "description": "(tsType: Partial<Customer>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "gstin": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "currency": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "branchid": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Customer>"
      },
      "Item": {
        "title": "Item",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "displayname": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Product",
              "Service"
            ]
          },
          "barcode": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "purchaseledger": {
            "type": "string"
          },
          "salesledger": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "categoryid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "code",
          "displayname",
          "type",
          "categoryid",
          "branchid"
        ],
        "additionalProperties": false
      },
      "New Item": {
        "title": "New Item",
        "type": "object",
        "description": "(tsType: Omit<Item, 'id' | 'branchid' | 'status'>, schemaOptions: { title: 'New Item', exclude: [ 'id', 'branchid', 'status' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "displayname": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Product",
              "Service"
            ]
          },
          "barcode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "purchaseledger": {
            "type": "string"
          },
          "salesledger": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "categoryid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "code",
          "displayname",
          "type",
          "categoryid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Item, 'id' | 'branchid' | 'status'>"
      },
      "ItemPartial": {
        "title": "ItemPartial",
        "type": "object",
        "description": "(tsType: Partial<Item>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "displayname": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Product",
              "Service"
            ]
          },
          "barcode": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "purchaseledger": {
            "type": "string"
          },
          "salesledger": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "categoryid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Item>"
      },
      "Tax": {
        "title": "Tax",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shortname": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "appliedto": {
            "type": "number"
          },
          "branchid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "shortname",
          "rate",
          "appliedto",
          "branchid"
        ],
        "additionalProperties": false
      },
      "New Tax": {
        "title": "New Tax",
        "type": "object",
        "description": "(tsType: Omit<Tax, 'id' | 'branchid'>, schemaOptions: { title: 'New Tax', exclude: [ 'id', 'branchid' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "shortname": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "appliedto": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "shortname",
          "rate",
          "appliedto"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Tax, 'id' | 'branchid'>"
      },
      "TaxPartial": {
        "title": "TaxPartial",
        "type": "object",
        "description": "(tsType: Partial<Tax>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shortname": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "appliedto": {
            "type": "number"
          },
          "branchid": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Tax>"
      },
      "ItemCategory": {
        "title": "ItemCategory",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "parentid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "code",
          "branchid"
        ],
        "additionalProperties": false
      },
      "New ItemCategory": {
        "title": "New ItemCategory",
        "type": "object",
        "description": "(tsType: Omit<ItemCategory, 'id' | 'branchid'>, schemaOptions: { title: 'New ItemCategory', exclude: [ 'id', 'branchid' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "parentid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "code"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<ItemCategory, 'id' | 'branchid'>"
      },
      "ItemCategoryPartial": {
        "title": "ItemCategoryPartial",
        "type": "object",
        "description": "(tsType: Partial<ItemCategory>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "parentid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<ItemCategory>"
      },
      "BankCash": {
        "title": "BankCash",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "branchid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "branchid"
        ],
        "additionalProperties": false
      },
      "New BankCash": {
        "title": "New BankCash",
        "type": "object",
        "description": "(tsType: Omit<BankCash, 'id' | 'branchid'>, schemaOptions: { title: 'New BankCash', exclude: [ 'id', 'branchid' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<BankCash, 'id' | 'branchid'>"
      },
      "BankCashPartial": {
        "title": "BankCashPartial",
        "type": "object",
        "description": "(tsType: Partial<BankCash>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "branchid": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<BankCash>"
      },
      "Journal": {
        "title": "Journal",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "fiscalyearid": {
            "type": "string"
          },
          "documentids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "number",
          "date",
          "fiscalyearid"
        ],
        "additionalProperties": false
      },
      "JournalEntryExcluding_id-journalid-order_": {
        "title": "JournalEntryExcluding_id-journalid-order_",
        "type": "object",
        "description": "(tsType: Omit<JournalEntry, 'id' | 'journalid' | 'order'>, schemaOptions: { exclude: [ 'id', 'journalid', 'order' ] })",
        "properties": {
          "debit": {
            "type": "number"
          },
          "credit": {
            "type": "number"
          },
          "ledgerid": {
            "type": "string"
          }
        },
        "required": [
          "ledgerid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<JournalEntry, 'id' | 'journalid' | 'order'>"
      },
      "SubscriptionPlanWithRelations": {
        "title": "SubscriptionPlanWithRelations",
        "type": "object",
        "description": "(tsType: SubscriptionPlanWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "externalplanid": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "interval": {
            "type": "string"
          },
          "createdat": {
            "type": "string",
            "format": "date-time"
          },
          "updatedat": {
            "type": "string",
            "format": "date-time"
          },
          "props": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "description",
          "currency",
          "interval",
          "createdat",
          "updatedat"
        ],
        "additionalProperties": false,
        "x-typescript-type": "SubscriptionPlanWithRelations"
      },
      "SubscriptionWithRelations": {
        "title": "SubscriptionWithRelations",
        "type": "object",
        "description": "(tsType: SubscriptionWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "externalplanid": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "startdate": {
            "type": "string",
            "format": "date"
          },
          "enddate": {
            "type": "string",
            "format": "date"
          },
          "createdat": {
            "type": "string",
            "format": "date-time"
          },
          "updatedat": {
            "type": "string",
            "format": "date-time"
          },
          "props": {
            "type": "object"
          },
          "subscriptionplanid": {
            "type": "string"
          },
          "userid": {
            "type": "string"
          },
          "subscriptionplan": {
            "$ref": "#/components/schemas/SubscriptionPlanWithRelations"
          },
          "foreignKey": {},
          "user": {
            "$ref": "#/components/schemas/UserWithRelations"
          }
        },
        "required": [
          "name",
          "startdate",
          "enddate",
          "subscriptionplanid",
          "userid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "SubscriptionWithRelations"
      },
      "UserWithRelations": {
        "title": "UserWithRelations",
        "type": "object",
        "description": "(tsType: UserWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "transform": [
              "toLowerCase"
            ]
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionWithRelations"
            }
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationWithRelations"
            }
          }
        },
        "required": [
          "name",
          "email"
        ],
        "additionalProperties": false,
        "x-typescript-type": "UserWithRelations"
      },
      "OrganizationWithRelations": {
        "title": "OrganizationWithRelations",
        "type": "object",
        "description": "(tsType: OrganizationWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "createdat": {
            "type": "string",
            "format": "date-time"
          },
          "updatedat": {
            "type": "string",
            "format": "date-time"
          },
          "userid": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserWithRelations"
          },
          "foreignKey": {},
          "branches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchWithRelations"
            }
          }
        },
        "required": [
          "name",
          "email",
          "userid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "OrganizationWithRelations"
      },
      "FiscalYearWithRelations": {
        "title": "FiscalYearWithRelations",
        "type": "object",
        "description": "(tsType: FiscalYearWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "startdate": {
            "type": "string"
          },
          "enddate": {
            "type": "string"
          },
          "freezetill": {
            "type": "string"
          },
          "jnumber": {
            "type": "string"
          },
          "currency": {
            "type": "object"
          },
          "branchid": {
            "type": "string"
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          },
          "foreignKey": {}
        },
        "required": [
          "name",
          "startdate",
          "enddate"
        ],
        "additionalProperties": false,
        "x-typescript-type": "FiscalYearWithRelations"
      },
      "LedgerCategoryWithRelations": {
        "title": "LedgerCategoryWithRelations",
        "type": "object",
        "description": "(tsType: LedgerCategoryWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "parentid": {
            "type": "string",
            "nullable": true
          },
          "fiscalyearid": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/LedgerCategoryWithRelations"
          },
          "foreignKey": {},
          "fiscalyear": {
            "$ref": "#/components/schemas/FiscalYearWithRelations"
          }
        },
        "required": [
          "name",
          "fiscalyearid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "LedgerCategoryWithRelations"
      },
      "LedgerWithRelations": {
        "title": "LedgerWithRelations",
        "type": "object",
        "description": "(tsType: LedgerWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "openingdr": {
            "type": "number"
          },
          "openingcr": {
            "type": "number"
          },
          "props": {
            "type": "object"
          },
          "categoryid": {
            "type": "string"
          },
          "fiscalyearid": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/LedgerCategoryWithRelations"
          },
          "foreignKey": {},
          "fiscalyear": {
            "$ref": "#/components/schemas/FiscalYearWithRelations"
          }
        },
        "required": [
          "name",
          "categoryid",
          "fiscalyearid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "LedgerWithRelations"
      },
      "JournalEntryWithRelations": {
        "title": "JournalEntryWithRelations",
        "type": "object",
        "description": "(tsType: JournalEntryWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "order": {
            "type": "number"
          },
          "debit": {
            "type": "number"
          },
          "credit": {
            "type": "number"
          },
          "journalid": {
            "type": "string"
          },
          "ledgerid": {
            "type": "string"
          },
          "journal": {
            "$ref": "#/components/schemas/JournalWithRelations"
          },
          "foreignKey": {},
          "ledger": {
            "$ref": "#/components/schemas/LedgerWithRelations"
          }
        },
        "required": [
          "order",
          "journalid",
          "ledgerid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "JournalEntryWithRelations"
      },
      "StoredDocumentWithRelations": {
        "title": "StoredDocumentWithRelations",
        "type": "object",
        "description": "(tsType: StoredDocumentWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "createdat": {
            "type": "string",
            "format": "date-time"
          },
          "addedbyid": {
            "type": "string"
          },
          "organizationid": {
            "type": "string"
          },
          "addedby": {
            "$ref": "#/components/schemas/UserWithRelations"
          },
          "foreignKey": {},
          "organization": {
            "$ref": "#/components/schemas/OrganizationWithRelations"
          }
        },
        "required": [
          "name",
          "path",
          "size",
          "category",
          "addedbyid",
          "organizationid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "StoredDocumentWithRelations"
      },
      "JournalWithRelations": {
        "title": "JournalWithRelations",
        "type": "object",
        "description": "(tsType: JournalWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "fiscalyearid": {
            "type": "string"
          },
          "documentids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JournalEntryWithRelations"
            }
          },
          "fiscalyear": {
            "$ref": "#/components/schemas/FiscalYearWithRelations"
          },
          "foreignKey": {},
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoredDocumentWithRelations"
            }
          }
        },
        "required": [
          "number",
          "date",
          "fiscalyearid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "JournalWithRelations"
      },
      "New Documents": {
        "title": "New Documents",
        "type": "object",
        "description": "(tsType: Omit<StoredDocument, 'id' | 'path' | 'addedbyid' | 'createdat' | 'status' | 'category' | 'organizationid'>, schemaOptions: { title: 'New Documents', exclude: [ 'id', 'path', 'addedbyid', 'createdat', 'status', 'category', 'organizationid' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "props": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "size"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<StoredDocument, 'id' | 'path' | 'addedbyid' | 'createdat' | 'status' | 'category' | 'organizationid'>"
      },
      "Ledger": {
        "title": "Ledger",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "openingdr": {
            "type": "number"
          },
          "openingcr": {
            "type": "number"
          },
          "props": {
            "type": "object"
          },
          "categoryid": {
            "type": "string"
          },
          "fiscalyearid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "categoryid",
          "fiscalyearid"
        ],
        "additionalProperties": false
      },
      "New Ledger": {
        "title": "New Ledger",
        "type": "object",
        "description": "(tsType: Omit<Ledger, 'id' | 'fiscalyearid'>, schemaOptions: { title: 'New Ledger', exclude: [ 'id', 'fiscalyearid' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "openingdr": {
            "type": "number"
          },
          "openingcr": {
            "type": "number"
          },
          "props": {
            "type": "object"
          },
          "categoryid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "categoryid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Ledger, 'id' | 'fiscalyearid'>"
      },
      "LedgerPartial": {
        "title": "LedgerPartial",
        "type": "object",
        "description": "(tsType: Partial<Ledger>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "openingdr": {
            "type": "number"
          },
          "openingcr": {
            "type": "number"
          },
          "props": {
            "type": "object"
          },
          "categoryid": {
            "type": "string"
          },
          "fiscalyearid": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Ledger>"
      },
      "LedgerCategory": {
        "title": "LedgerCategory",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "parentid": {
            "type": "string",
            "nullable": true
          },
          "fiscalyearid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "fiscalyearid"
        ],
        "additionalProperties": false
      },
      "New LedgerCategory": {
        "title": "New LedgerCategory",
        "type": "object",
        "description": "(tsType: Omit<LedgerCategory, 'id' | 'fiscalyearid'>, schemaOptions: { title: 'New LedgerCategory', exclude: [ 'id', 'fiscalyearid' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "parentid": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<LedgerCategory, 'id' | 'fiscalyearid'>"
      },
      "LedgerCategoryPartial": {
        "title": "LedgerCategoryPartial",
        "type": "object",
        "description": "(tsType: Partial<LedgerCategory>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "props": {
            "type": "object"
          },
          "parentid": {
            "type": "string",
            "nullable": true
          },
          "fiscalyearid": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<LedgerCategory>"
      },
      "New Document": {
        "title": "New Document",
        "type": "object",
        "description": "(tsType: Omit<StoredDocument, 'id' | 'path' | 'addedbyid' | 'createdat' | 'status' | 'category' | 'organizationid'>, schemaOptions: { title: 'New Document', exclude: [ 'id', 'path', 'addedbyid', 'createdat', 'status', 'category', 'organizationid' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "props": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "size"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<StoredDocument, 'id' | 'path' | 'addedbyid' | 'createdat' | 'status' | 'category' | 'organizationid'>"
      },
      "AuditLogWithRelations": {
        "title": "AuditLogWithRelations",
        "type": "object",
        "description": "(tsType: AuditLogWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "originalurl": {
            "type": "string"
          },
          "publicip": {
            "type": "string"
          },
          "useragent": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "duration": {
            "type": "number"
          },
          "headers": {
            "type": "object"
          },
          "userid": {
            "type": "string"
          },
          "fiscalyearid": {
            "type": "string"
          },
          "branchid": {
            "type": "string"
          },
          "organizationid": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserWithRelations"
          },
          "foreignKey": {},
          "fiscalyear": {
            "$ref": "#/components/schemas/FiscalYearWithRelations"
          },
          "branch": {
            "$ref": "#/components/schemas/BranchWithRelations"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationWithRelations"
          }
        },
        "required": [
          "status",
          "originalurl",
          "method"
        ],
        "additionalProperties": false,
        "x-typescript-type": "AuditLogWithRelations"
      },
      "FiscalYear": {
        "title": "FiscalYear",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "startdate": {
            "type": "string"
          },
          "enddate": {
            "type": "string"
          },
          "freezetill": {
            "type": "string"
          },
          "jnumber": {
            "type": "string"
          },
          "currency": {
            "type": "object"
          },
          "branchid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "startdate",
          "enddate"
        ],
        "additionalProperties": false
      },
      "New FiscalYear": {
        "title": "New FiscalYear",
        "type": "object",
        "description": "(tsType: Omit<FiscalYear, 'id'>, schemaOptions: { title: 'New FiscalYear', exclude: [ 'id' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "startdate": {
            "type": "string"
          },
          "enddate": {
            "type": "string"
          },
          "freezetill": {
            "type": "string"
          },
          "jnumber": {
            "type": "string"
          },
          "currency": {
            "type": "object"
          },
          "branchid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "startdate",
          "enddate"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<FiscalYear, 'id'>"
      },
      "FiscalYearPartial": {
        "title": "FiscalYearPartial",
        "type": "object",
        "description": "(tsType: Partial<FiscalYear>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "startdate": {
            "type": "string"
          },
          "enddate": {
            "type": "string"
          },
          "freezetill": {
            "type": "string"
          },
          "jnumber": {
            "type": "string"
          },
          "currency": {
            "type": "object"
          },
          "branchid": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<FiscalYear>"
      },
      "Branch": {
        "title": "Branch",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "country": {
            "type": "object"
          },
          "state": {
            "type": "string"
          },
          "fiscalstart": {
            "type": "string"
          },
          "gstin": {
            "type": "string"
          },
          "invnumber": {
            "type": "string"
          },
          "organizationid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email",
          "fiscalstart"
        ],
        "additionalProperties": false
      },
      "New Branch": {
        "title": "New Branch",
        "type": "object",
        "description": "(tsType: Omit<Branch, 'id'>, schemaOptions: { title: 'New Branch', exclude: [ 'id' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "country": {
            "type": "object"
          },
          "state": {
            "type": "string"
          },
          "fiscalstart": {
            "type": "string"
          },
          "gstin": {
            "type": "string"
          },
          "invnumber": {
            "type": "string"
          },
          "organizationid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email",
          "fiscalstart"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Branch, 'id'>"
      },
      "BranchPartial": {
        "title": "BranchPartial",
        "type": "object",
        "description": "(tsType: Partial<Branch>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "country": {
            "type": "object"
          },
          "state": {
            "type": "string"
          },
          "fiscalstart": {
            "type": "string"
          },
          "gstin": {
            "type": "string"
          },
          "invnumber": {
            "type": "string"
          },
          "organizationid": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Branch>"
      },
      "Organization": {
        "title": "Organization",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "createdat": {
            "type": "string",
            "format": "date-time"
          },
          "updatedat": {
            "type": "string",
            "format": "date-time"
          },
          "userid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email",
          "userid"
        ],
        "additionalProperties": false
      },
      "New Organization": {
        "title": "New Organization",
        "type": "object",
        "description": "(tsType: Omit<Organization, 'id' | 'userid' | 'createdat' | 'updatedat'>, schemaOptions: { title: 'New Organization', exclude: [ 'id', 'userid', 'createdat', 'updatedat' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Organization, 'id' | 'userid' | 'createdat' | 'updatedat'>"
      },
      "OrganizationUpdateDtoPartial": {
        "title": "OrganizationUpdateDtoPartial",
        "type": "object",
        "description": "(tsType: Partial<OrganizationUpdateDto>, schemaOptions: { partial: true })",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "description": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<OrganizationUpdateDto>"
      },
      "Subscription": {
        "title": "Subscription",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "externalplanid": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "startdate": {
            "type": "string",
            "format": "date"
          },
          "enddate": {
            "type": "string",
            "format": "date"
          },
          "createdat": {
            "type": "string",
            "format": "date-time"
          },
          "updatedat": {
            "type": "string",
            "format": "date-time"
          },
          "props": {
            "type": "object"
          },
          "subscriptionplanid": {
            "type": "string"
          },
          "userid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "startdate",
          "enddate",
          "subscriptionplanid",
          "userid"
        ],
        "additionalProperties": false
      },
      "New Subscription": {
        "title": "New Subscription",
        "type": "object",
        "description": "(tsType: Omit<Subscription, 'id'>, schemaOptions: { title: 'New Subscription', exclude: [ 'id' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "externalplanid": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "startdate": {
            "type": "string",
            "format": "date"
          },
          "enddate": {
            "type": "string",
            "format": "date"
          },
          "createdat": {
            "type": "string",
            "format": "date-time"
          },
          "updatedat": {
            "type": "string",
            "format": "date-time"
          },
          "props": {
            "type": "object"
          },
          "subscriptionplanid": {
            "type": "string"
          },
          "userid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "startdate",
          "enddate",
          "subscriptionplanid",
          "userid"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Subscription, 'id'>"
      },
      "SubscriptionPartial": {
        "title": "SubscriptionPartial",
        "type": "object",
        "description": "(tsType: Partial<Subscription>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "externalplanid": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "startdate": {
            "type": "string",
            "format": "date"
          },
          "enddate": {
            "type": "string",
            "format": "date"
          },
          "createdat": {
            "type": "string",
            "format": "date-time"
          },
          "updatedat": {
            "type": "string",
            "format": "date-time"
          },
          "props": {
            "type": "object"
          },
          "subscriptionplanid": {
            "type": "string"
          },
          "userid": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Subscription>"
      },
      "SubscriptionPlan": {
        "title": "SubscriptionPlan",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "externalplanid": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "interval": {
            "type": "string"
          },
          "createdat": {
            "type": "string",
            "format": "date-time"
          },
          "updatedat": {
            "type": "string",
            "format": "date-time"
          },
          "props": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "description",
          "currency",
          "interval",
          "createdat",
          "updatedat"
        ],
        "additionalProperties": false
      },
      "New SubscriptionPlan": {
        "title": "New SubscriptionPlan",
        "type": "object",
        "description": "(tsType: Omit<SubscriptionPlan, 'id'>, schemaOptions: { title: 'New SubscriptionPlan', exclude: [ 'id' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "externalplanid": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "interval": {
            "type": "string"
          },
          "createdat": {
            "type": "string",
            "format": "date-time"
          },
          "updatedat": {
            "type": "string",
            "format": "date-time"
          },
          "props": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "description",
          "currency",
          "interval",
          "createdat",
          "updatedat"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<SubscriptionPlan, 'id'>"
      },
      "SubscriptionPlanPartial": {
        "title": "SubscriptionPlanPartial",
        "type": "object",
        "description": "(tsType: Partial<SubscriptionPlan>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "externalplanid": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "interval": {
            "type": "string"
          },
          "createdat": {
            "type": "string",
            "format": "date-time"
          },
          "updatedat": {
            "type": "string",
            "format": "date-time"
          },
          "props": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<SubscriptionPlan>"
      },
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "transform": [
              "toLowerCase"
            ]
          }
        },
        "required": [
          "name",
          "email"
        ],
        "additionalProperties": false
      },
      "New User": {
        "title": "New User",
        "type": "object",
        "description": "(tsType: Omit<User, 'id'>, schemaOptions: { title: 'New User', exclude: [ 'id' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "transform": [
              "toLowerCase"
            ]
          }
        },
        "required": [
          "name",
          "email"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<User, 'id'>"
      },
      "UserPartial": {
        "title": "UserPartial",
        "type": "object",
        "description": "(tsType: Partial<User>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "transform": [
              "toLowerCase"
            ]
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<User>"
      },
      "UserSession": {
        "title": "UserSession",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "userid": {
            "type": "string"
          },
          "updatedat": {
            "type": "string",
            "format": "date-time"
          },
          "subscription": {
            "type": "object"
          },
          "organization": {
            "type": "object"
          },
          "branch": {
            "type": "object"
          },
          "fiscalyear": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "email",
          "userid"
        ],
        "additionalProperties": false
      },
      "loopback.Count": {
        "type": "object",
        "title": "loopback.Count",
        "x-typescript-type": "@loopback/repository#Count",
        "properties": {
          "count": {
            "type": "number"
          }
        }
      },
      "AuditLog.Filter": {
        "type": "object",
        "title": "AuditLog.Filter",
        "properties": {
          "where": {
            "title": "AuditLog.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<AuditLog>"
      },
      "AuditLog.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "AuditLog.ScopeFilter"
      },
      "AuditLog.IncludeFilter.Items": {
        "title": "AuditLog.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "user",
              "fiscalyear",
              "branch",
              "organization"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/AuditLog.ScopeFilter"
          }
        }
      },
      "AuditLog.Filter1": {
        "type": "object",
        "title": "AuditLog.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "originalurl": {
                    "type": "boolean"
                  },
                  "publicip": {
                    "type": "boolean"
                  },
                  "useragent": {
                    "type": "boolean"
                  },
                  "method": {
                    "type": "boolean"
                  },
                  "duration": {
                    "type": "boolean"
                  },
                  "headers": {
                    "type": "boolean"
                  },
                  "userid": {
                    "type": "boolean"
                  },
                  "fiscalyearid": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  },
                  "organizationid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "timestamp",
                    "status",
                    "originalurl",
                    "publicip",
                    "useragent",
                    "method",
                    "duration",
                    "headers",
                    "userid",
                    "fiscalyearid",
                    "branchid",
                    "organizationid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "AuditLog.Fields"
          },
          "include": {
            "title": "AuditLog.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AuditLog.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<AuditLog>"
      },
      "AuditLog.Filter2": {
        "type": "object",
        "title": "AuditLog.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "AuditLog.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "originalurl": {
                    "type": "boolean"
                  },
                  "publicip": {
                    "type": "boolean"
                  },
                  "useragent": {
                    "type": "boolean"
                  },
                  "method": {
                    "type": "boolean"
                  },
                  "duration": {
                    "type": "boolean"
                  },
                  "headers": {
                    "type": "boolean"
                  },
                  "userid": {
                    "type": "boolean"
                  },
                  "fiscalyearid": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  },
                  "organizationid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "timestamp",
                    "status",
                    "originalurl",
                    "publicip",
                    "useragent",
                    "method",
                    "duration",
                    "headers",
                    "userid",
                    "fiscalyearid",
                    "branchid",
                    "organizationid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "AuditLog.Fields"
          },
          "include": {
            "title": "AuditLog.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AuditLog.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<AuditLog>"
      },
      "BankCash.Filter": {
        "type": "object",
        "title": "BankCash.Filter",
        "properties": {
          "where": {
            "title": "BankCash.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<BankCash>"
      },
      "BankCash.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "BankCash.ScopeFilter"
      },
      "BankCash.IncludeFilter.Items": {
        "title": "BankCash.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "branch"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/BankCash.ScopeFilter"
          }
        }
      },
      "BankCash.Filter1": {
        "type": "object",
        "title": "BankCash.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "status",
                    "description",
                    "props",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "BankCash.Fields"
          },
          "include": {
            "title": "BankCash.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BankCash.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<BankCash>"
      },
      "BankCash.Filter2": {
        "type": "object",
        "title": "BankCash.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "BankCash.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "status",
                    "description",
                    "props",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "BankCash.Fields"
          },
          "include": {
            "title": "BankCash.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BankCash.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<BankCash>"
      },
      "Branch.Filter": {
        "type": "object",
        "title": "Branch.Filter",
        "properties": {
          "where": {
            "title": "Branch.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Branch>"
      },
      "Branch.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Branch.ScopeFilter"
      },
      "Branch.IncludeFilter.Items": {
        "title": "Branch.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "organization",
              "fiscalyears"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/Branch.ScopeFilter"
          }
        }
      },
      "Branch.Filter1": {
        "type": "object",
        "title": "Branch.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "mobile": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "country": {
                    "type": "boolean"
                  },
                  "state": {
                    "type": "boolean"
                  },
                  "fiscalstart": {
                    "type": "boolean"
                  },
                  "gstin": {
                    "type": "boolean"
                  },
                  "invnumber": {
                    "type": "boolean"
                  },
                  "organizationid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "email",
                    "mobile",
                    "address",
                    "country",
                    "state",
                    "fiscalstart",
                    "gstin",
                    "invnumber",
                    "organizationid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Branch.Fields"
          },
          "include": {
            "title": "Branch.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Branch.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Branch>"
      },
      "Branch.Filter2": {
        "type": "object",
        "title": "Branch.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Branch.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "mobile": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "country": {
                    "type": "boolean"
                  },
                  "state": {
                    "type": "boolean"
                  },
                  "fiscalstart": {
                    "type": "boolean"
                  },
                  "gstin": {
                    "type": "boolean"
                  },
                  "invnumber": {
                    "type": "boolean"
                  },
                  "organizationid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "email",
                    "mobile",
                    "address",
                    "country",
                    "state",
                    "fiscalstart",
                    "gstin",
                    "invnumber",
                    "organizationid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Branch.Fields"
          },
          "include": {
            "title": "Branch.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Branch.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Branch>"
      },
      "Customer.Filter": {
        "type": "object",
        "title": "Customer.Filter",
        "properties": {
          "where": {
            "title": "Customer.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Customer>"
      },
      "Customer.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Customer.ScopeFilter"
      },
      "Customer.IncludeFilter.Items": {
        "title": "Customer.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "branch"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/Customer.ScopeFilter"
          }
        }
      },
      "Customer.Filter1": {
        "type": "object",
        "title": "Customer.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "mobile": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "gstin": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "country": {
                    "type": "boolean"
                  },
                  "state": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "mobile",
                    "email",
                    "gstin",
                    "address",
                    "country",
                    "state",
                    "currency",
                    "description",
                    "props",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Customer.Fields"
          },
          "include": {
            "title": "Customer.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Customer.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Customer>"
      },
      "Customer.Filter2": {
        "type": "object",
        "title": "Customer.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Customer.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "mobile": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "gstin": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "country": {
                    "type": "boolean"
                  },
                  "state": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "mobile",
                    "email",
                    "gstin",
                    "address",
                    "country",
                    "state",
                    "currency",
                    "description",
                    "props",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Customer.Fields"
          },
          "include": {
            "title": "Customer.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Customer.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Customer>"
      },
      "CustomerReceipt.Filter": {
        "type": "object",
        "title": "CustomerReceipt.Filter",
        "properties": {
          "where": {
            "title": "CustomerReceipt.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<CustomerReceipt>"
      },
      "CustomerReceipt.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "CustomerReceipt.ScopeFilter"
      },
      "CustomerReceipt.IncludeFilter.Items": {
        "title": "CustomerReceipt.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "customer",
              "bcash",
              "invoices",
              "branch"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/CustomerReceipt.ScopeFilter"
          }
        }
      },
      "CustomerReceipt.Filter1": {
        "type": "object",
        "title": "CustomerReceipt.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "date": {
                    "type": "boolean"
                  },
                  "amount": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "cprops": {
                    "type": "boolean"
                  },
                  "sprops": {
                    "type": "boolean"
                  },
                  "customerid": {
                    "type": "boolean"
                  },
                  "bcashid": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "date",
                    "amount",
                    "currency",
                    "cprops",
                    "sprops",
                    "customerid",
                    "bcashid",
                    "description",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "CustomerReceipt.Fields"
          },
          "include": {
            "title": "CustomerReceipt.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/CustomerReceipt.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<CustomerReceipt>"
      },
      "CustomerReceipt.Filter2": {
        "type": "object",
        "title": "CustomerReceipt.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "CustomerReceipt.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "date": {
                    "type": "boolean"
                  },
                  "amount": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "cprops": {
                    "type": "boolean"
                  },
                  "sprops": {
                    "type": "boolean"
                  },
                  "customerid": {
                    "type": "boolean"
                  },
                  "bcashid": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "date",
                    "amount",
                    "currency",
                    "cprops",
                    "sprops",
                    "customerid",
                    "bcashid",
                    "description",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "CustomerReceipt.Fields"
          },
          "include": {
            "title": "CustomerReceipt.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/CustomerReceipt.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<CustomerReceipt>"
      },
      "FiscalYear.Filter": {
        "type": "object",
        "title": "FiscalYear.Filter",
        "properties": {
          "where": {
            "title": "FiscalYear.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<FiscalYear>"
      },
      "FiscalYear.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "FiscalYear.ScopeFilter"
      },
      "FiscalYear.IncludeFilter.Items": {
        "title": "FiscalYear.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "branch"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/FiscalYear.ScopeFilter"
          }
        }
      },
      "FiscalYear.Filter1": {
        "type": "object",
        "title": "FiscalYear.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "startdate": {
                    "type": "boolean"
                  },
                  "enddate": {
                    "type": "boolean"
                  },
                  "freezetill": {
                    "type": "boolean"
                  },
                  "jnumber": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "startdate",
                    "enddate",
                    "freezetill",
                    "jnumber",
                    "currency",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "FiscalYear.Fields"
          },
          "include": {
            "title": "FiscalYear.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FiscalYear.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<FiscalYear>"
      },
      "FiscalYear.Filter2": {
        "type": "object",
        "title": "FiscalYear.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "FiscalYear.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "startdate": {
                    "type": "boolean"
                  },
                  "enddate": {
                    "type": "boolean"
                  },
                  "freezetill": {
                    "type": "boolean"
                  },
                  "jnumber": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "startdate",
                    "enddate",
                    "freezetill",
                    "jnumber",
                    "currency",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "FiscalYear.Fields"
          },
          "include": {
            "title": "FiscalYear.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FiscalYear.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<FiscalYear>"
      },
      "Item.Filter": {
        "type": "object",
        "title": "Item.Filter",
        "properties": {
          "where": {
            "title": "Item.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Item>"
      },
      "Item.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Item.ScopeFilter"
      },
      "Item.IncludeFilter.Items": {
        "title": "Item.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "category",
              "branch"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/Item.ScopeFilter"
          }
        }
      },
      "Item.Filter1": {
        "type": "object",
        "title": "Item.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "code": {
                    "type": "boolean"
                  },
                  "displayname": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "barcode": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "purchaseledger": {
                    "type": "boolean"
                  },
                  "salesledger": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "categoryid": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "code",
                    "displayname",
                    "type",
                    "barcode",
                    "status",
                    "description",
                    "purchaseledger",
                    "salesledger",
                    "props",
                    "categoryid",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Item.Fields"
          },
          "include": {
            "title": "Item.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Item.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Item>"
      },
      "Item.Filter2": {
        "type": "object",
        "title": "Item.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Item.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "code": {
                    "type": "boolean"
                  },
                  "displayname": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "barcode": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "purchaseledger": {
                    "type": "boolean"
                  },
                  "salesledger": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "categoryid": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "code",
                    "displayname",
                    "type",
                    "barcode",
                    "status",
                    "description",
                    "purchaseledger",
                    "salesledger",
                    "props",
                    "categoryid",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Item.Fields"
          },
          "include": {
            "title": "Item.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Item.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Item>"
      },
      "ItemCategory.Filter": {
        "type": "object",
        "title": "ItemCategory.Filter",
        "properties": {
          "where": {
            "title": "ItemCategory.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<ItemCategory>"
      },
      "ItemCategory.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "ItemCategory.ScopeFilter"
      },
      "ItemCategory.IncludeFilter.Items": {
        "title": "ItemCategory.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "parent",
              "branch"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/ItemCategory.ScopeFilter"
          }
        }
      },
      "ItemCategory.Filter1": {
        "type": "object",
        "title": "ItemCategory.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "code": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "parentid": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "code",
                    "description",
                    "props",
                    "parentid",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "ItemCategory.Fields"
          },
          "include": {
            "title": "ItemCategory.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ItemCategory.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<ItemCategory>"
      },
      "ItemCategory.Filter2": {
        "type": "object",
        "title": "ItemCategory.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "ItemCategory.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "code": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "parentid": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "code",
                    "description",
                    "props",
                    "parentid",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "ItemCategory.Fields"
          },
          "include": {
            "title": "ItemCategory.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ItemCategory.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<ItemCategory>"
      },
      "Journal.Filter": {
        "type": "object",
        "title": "Journal.Filter",
        "properties": {
          "where": {
            "title": "Journal.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Journal>"
      },
      "Journal.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Journal.ScopeFilter"
      },
      "Journal.IncludeFilter.Items": {
        "title": "Journal.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "entries",
              "fiscalyear",
              "documents"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/Journal.ScopeFilter"
          }
        }
      },
      "Journal.Filter1": {
        "type": "object",
        "title": "Journal.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "number": {
                    "type": "boolean"
                  },
                  "date": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "fiscalyearid": {
                    "type": "boolean"
                  },
                  "documentids": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "number",
                    "date",
                    "description",
                    "props",
                    "fiscalyearid",
                    "documentids"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Journal.Fields"
          },
          "include": {
            "title": "Journal.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Journal.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Journal>"
      },
      "Journal.Filter2": {
        "type": "object",
        "title": "Journal.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Journal.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "number": {
                    "type": "boolean"
                  },
                  "date": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "fiscalyearid": {
                    "type": "boolean"
                  },
                  "documentids": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "number",
                    "date",
                    "description",
                    "props",
                    "fiscalyearid",
                    "documentids"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Journal.Fields"
          },
          "include": {
            "title": "Journal.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Journal.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Journal>"
      },
      "Ledger.Filter": {
        "type": "object",
        "title": "Ledger.Filter",
        "properties": {
          "where": {
            "title": "Ledger.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Ledger>"
      },
      "Ledger.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Ledger.ScopeFilter"
      },
      "Ledger.IncludeFilter.Items": {
        "title": "Ledger.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "category",
              "fiscalyear"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/Ledger.ScopeFilter"
          }
        }
      },
      "Ledger.Filter1": {
        "type": "object",
        "title": "Ledger.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "openingdr": {
                    "type": "boolean"
                  },
                  "openingcr": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "categoryid": {
                    "type": "boolean"
                  },
                  "fiscalyearid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "description",
                    "openingdr",
                    "openingcr",
                    "props",
                    "categoryid",
                    "fiscalyearid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Ledger.Fields"
          },
          "include": {
            "title": "Ledger.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Ledger.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Ledger>"
      },
      "Ledger.Filter2": {
        "type": "object",
        "title": "Ledger.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Ledger.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "openingdr": {
                    "type": "boolean"
                  },
                  "openingcr": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "categoryid": {
                    "type": "boolean"
                  },
                  "fiscalyearid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "description",
                    "openingdr",
                    "openingcr",
                    "props",
                    "categoryid",
                    "fiscalyearid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Ledger.Fields"
          },
          "include": {
            "title": "Ledger.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Ledger.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Ledger>"
      },
      "LedgerCategory.Filter": {
        "type": "object",
        "title": "LedgerCategory.Filter",
        "properties": {
          "where": {
            "title": "LedgerCategory.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<LedgerCategory>"
      },
      "LedgerCategory.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "LedgerCategory.ScopeFilter"
      },
      "LedgerCategory.IncludeFilter.Items": {
        "title": "LedgerCategory.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "parent",
              "fiscalyear"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/LedgerCategory.ScopeFilter"
          }
        }
      },
      "LedgerCategory.Filter1": {
        "type": "object",
        "title": "LedgerCategory.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "parentid": {
                    "type": "boolean"
                  },
                  "fiscalyearid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "description",
                    "props",
                    "parentid",
                    "fiscalyearid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "LedgerCategory.Fields"
          },
          "include": {
            "title": "LedgerCategory.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LedgerCategory.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<LedgerCategory>"
      },
      "LedgerCategory.Filter2": {
        "type": "object",
        "title": "LedgerCategory.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "LedgerCategory.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "parentid": {
                    "type": "boolean"
                  },
                  "fiscalyearid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "description",
                    "props",
                    "parentid",
                    "fiscalyearid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "LedgerCategory.Fields"
          },
          "include": {
            "title": "LedgerCategory.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LedgerCategory.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<LedgerCategory>"
      },
      "Organization.Filter": {
        "type": "object",
        "title": "Organization.Filter",
        "properties": {
          "where": {
            "title": "Organization.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Organization>"
      },
      "Organization.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Organization.ScopeFilter"
      },
      "Organization.IncludeFilter.Items": {
        "title": "Organization.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "user",
              "branches"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/Organization.ScopeFilter"
          }
        }
      },
      "Organization.Filter1": {
        "type": "object",
        "title": "Organization.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "mobile": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "createdat": {
                    "type": "boolean"
                  },
                  "updatedat": {
                    "type": "boolean"
                  },
                  "userid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "email",
                    "mobile",
                    "address",
                    "description",
                    "createdat",
                    "updatedat",
                    "userid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Organization.Fields"
          },
          "include": {
            "title": "Organization.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Organization.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Organization>"
      },
      "Organization.Filter2": {
        "type": "object",
        "title": "Organization.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Organization.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "mobile": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "createdat": {
                    "type": "boolean"
                  },
                  "updatedat": {
                    "type": "boolean"
                  },
                  "userid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "email",
                    "mobile",
                    "address",
                    "description",
                    "createdat",
                    "updatedat",
                    "userid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Organization.Fields"
          },
          "include": {
            "title": "Organization.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Organization.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Organization>"
      },
      "PurchaseInvoice.Filter": {
        "type": "object",
        "title": "PurchaseInvoice.Filter",
        "properties": {
          "where": {
            "title": "PurchaseInvoice.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<PurchaseInvoice>"
      },
      "PurchaseInvoice.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "PurchaseInvoice.ScopeFilter"
      },
      "PurchaseInvoice.IncludeFilter.Items": {
        "title": "PurchaseInvoice.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "vendor",
              "items",
              "payments",
              "branch"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/PurchaseInvoice.ScopeFilter"
          }
        }
      },
      "PurchaseInvoice.Filter1": {
        "type": "object",
        "title": "PurchaseInvoice.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "number": {
                    "type": "boolean"
                  },
                  "date": {
                    "type": "boolean"
                  },
                  "duedate": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "itemtotal": {
                    "type": "boolean"
                  },
                  "discount": {
                    "type": "boolean"
                  },
                  "subtotal": {
                    "type": "boolean"
                  },
                  "tax": {
                    "type": "boolean"
                  },
                  "roundoff": {
                    "type": "boolean"
                  },
                  "grandtotal": {
                    "type": "boolean"
                  },
                  "billingaddress": {
                    "type": "boolean"
                  },
                  "shippingaddress": {
                    "type": "boolean"
                  },
                  "cprops": {
                    "type": "boolean"
                  },
                  "sprops": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "vendorid": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "number",
                    "date",
                    "duedate",
                    "currency",
                    "itemtotal",
                    "discount",
                    "subtotal",
                    "tax",
                    "roundoff",
                    "grandtotal",
                    "billingaddress",
                    "shippingaddress",
                    "cprops",
                    "sprops",
                    "description",
                    "vendorid",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "PurchaseInvoice.Fields"
          },
          "include": {
            "title": "PurchaseInvoice.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PurchaseInvoice.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<PurchaseInvoice>"
      },
      "PurchaseInvoice.Filter2": {
        "type": "object",
        "title": "PurchaseInvoice.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "PurchaseInvoice.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "number": {
                    "type": "boolean"
                  },
                  "date": {
                    "type": "boolean"
                  },
                  "duedate": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "itemtotal": {
                    "type": "boolean"
                  },
                  "discount": {
                    "type": "boolean"
                  },
                  "subtotal": {
                    "type": "boolean"
                  },
                  "tax": {
                    "type": "boolean"
                  },
                  "roundoff": {
                    "type": "boolean"
                  },
                  "grandtotal": {
                    "type": "boolean"
                  },
                  "billingaddress": {
                    "type": "boolean"
                  },
                  "shippingaddress": {
                    "type": "boolean"
                  },
                  "cprops": {
                    "type": "boolean"
                  },
                  "sprops": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "vendorid": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "number",
                    "date",
                    "duedate",
                    "currency",
                    "itemtotal",
                    "discount",
                    "subtotal",
                    "tax",
                    "roundoff",
                    "grandtotal",
                    "billingaddress",
                    "shippingaddress",
                    "cprops",
                    "sprops",
                    "description",
                    "vendorid",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "PurchaseInvoice.Fields"
          },
          "include": {
            "title": "PurchaseInvoice.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PurchaseInvoice.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<PurchaseInvoice>"
      },
      "PurchaseReturn.Filter": {
        "type": "object",
        "title": "PurchaseReturn.Filter",
        "properties": {
          "where": {
            "title": "PurchaseReturn.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<PurchaseReturn>"
      },
      "PurchaseReturn.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "PurchaseReturn.ScopeFilter"
      },
      "PurchaseReturn.IncludeFilter.Items": {
        "title": "PurchaseReturn.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "purchaseinvoice",
              "items",
              "branch"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/PurchaseReturn.ScopeFilter"
          }
        }
      },
      "PurchaseReturn.Filter1": {
        "type": "object",
        "title": "PurchaseReturn.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "number": {
                    "type": "boolean"
                  },
                  "date": {
                    "type": "boolean"
                  },
                  "duedate": {
                    "type": "boolean"
                  },
                  "itemtotal": {
                    "type": "boolean"
                  },
                  "tax": {
                    "type": "boolean"
                  },
                  "roundoff": {
                    "type": "boolean"
                  },
                  "grandtotal": {
                    "type": "boolean"
                  },
                  "cprops": {
                    "type": "boolean"
                  },
                  "sprops": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "purchaseinvoiceid": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "number",
                    "date",
                    "duedate",
                    "itemtotal",
                    "tax",
                    "roundoff",
                    "grandtotal",
                    "cprops",
                    "sprops",
                    "description",
                    "purchaseinvoiceid",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "PurchaseReturn.Fields"
          },
          "include": {
            "title": "PurchaseReturn.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PurchaseReturn.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<PurchaseReturn>"
      },
      "PurchaseReturn.Filter2": {
        "type": "object",
        "title": "PurchaseReturn.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "PurchaseReturn.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "number": {
                    "type": "boolean"
                  },
                  "date": {
                    "type": "boolean"
                  },
                  "duedate": {
                    "type": "boolean"
                  },
                  "itemtotal": {
                    "type": "boolean"
                  },
                  "tax": {
                    "type": "boolean"
                  },
                  "roundoff": {
                    "type": "boolean"
                  },
                  "grandtotal": {
                    "type": "boolean"
                  },
                  "cprops": {
                    "type": "boolean"
                  },
                  "sprops": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "purchaseinvoiceid": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "number",
                    "date",
                    "duedate",
                    "itemtotal",
                    "tax",
                    "roundoff",
                    "grandtotal",
                    "cprops",
                    "sprops",
                    "description",
                    "purchaseinvoiceid",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "PurchaseReturn.Fields"
          },
          "include": {
            "title": "PurchaseReturn.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PurchaseReturn.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<PurchaseReturn>"
      },
      "SaleInvoice.Filter": {
        "type": "object",
        "title": "SaleInvoice.Filter",
        "properties": {
          "where": {
            "title": "SaleInvoice.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<SaleInvoice>"
      },
      "SaleInvoice.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "SaleInvoice.ScopeFilter"
      },
      "SaleInvoice.IncludeFilter.Items": {
        "title": "SaleInvoice.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "customer",
              "items",
              "receipts",
              "branch"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/SaleInvoice.ScopeFilter"
          }
        }
      },
      "SaleInvoice.Filter1": {
        "type": "object",
        "title": "SaleInvoice.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "number": {
                    "type": "boolean"
                  },
                  "date": {
                    "type": "boolean"
                  },
                  "duedate": {
                    "type": "boolean"
                  },
                  "itemtotal": {
                    "type": "boolean"
                  },
                  "discount": {
                    "type": "boolean"
                  },
                  "subtotal": {
                    "type": "boolean"
                  },
                  "tax": {
                    "type": "boolean"
                  },
                  "roundoff": {
                    "type": "boolean"
                  },
                  "grandtotal": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "billingaddress": {
                    "type": "boolean"
                  },
                  "shippingaddress": {
                    "type": "boolean"
                  },
                  "cprops": {
                    "type": "boolean"
                  },
                  "sprops": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "customerid": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "number",
                    "date",
                    "duedate",
                    "itemtotal",
                    "discount",
                    "subtotal",
                    "tax",
                    "roundoff",
                    "grandtotal",
                    "currency",
                    "billingaddress",
                    "shippingaddress",
                    "cprops",
                    "sprops",
                    "description",
                    "customerid",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "SaleInvoice.Fields"
          },
          "include": {
            "title": "SaleInvoice.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SaleInvoice.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<SaleInvoice>"
      },
      "SaleInvoice.Filter2": {
        "type": "object",
        "title": "SaleInvoice.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "SaleInvoice.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "number": {
                    "type": "boolean"
                  },
                  "date": {
                    "type": "boolean"
                  },
                  "duedate": {
                    "type": "boolean"
                  },
                  "itemtotal": {
                    "type": "boolean"
                  },
                  "discount": {
                    "type": "boolean"
                  },
                  "subtotal": {
                    "type": "boolean"
                  },
                  "tax": {
                    "type": "boolean"
                  },
                  "roundoff": {
                    "type": "boolean"
                  },
                  "grandtotal": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "billingaddress": {
                    "type": "boolean"
                  },
                  "shippingaddress": {
                    "type": "boolean"
                  },
                  "cprops": {
                    "type": "boolean"
                  },
                  "sprops": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "customerid": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "number",
                    "date",
                    "duedate",
                    "itemtotal",
                    "discount",
                    "subtotal",
                    "tax",
                    "roundoff",
                    "grandtotal",
                    "currency",
                    "billingaddress",
                    "shippingaddress",
                    "cprops",
                    "sprops",
                    "description",
                    "customerid",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "SaleInvoice.Fields"
          },
          "include": {
            "title": "SaleInvoice.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SaleInvoice.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<SaleInvoice>"
      },
      "StoredDocument.Filter": {
        "type": "object",
        "title": "StoredDocument.Filter",
        "properties": {
          "where": {
            "title": "StoredDocument.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<StoredDocument>"
      },
      "StoredDocument.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "StoredDocument.ScopeFilter"
      },
      "StoredDocument.IncludeFilter.Items": {
        "title": "StoredDocument.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "addedby",
              "organization"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/StoredDocument.ScopeFilter"
          }
        }
      },
      "StoredDocument.Filter1": {
        "type": "object",
        "title": "StoredDocument.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "path": {
                    "type": "boolean"
                  },
                  "size": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "category": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "createdat": {
                    "type": "boolean"
                  },
                  "addedbyid": {
                    "type": "boolean"
                  },
                  "organizationid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "path",
                    "size",
                    "type",
                    "category",
                    "status",
                    "props",
                    "createdat",
                    "addedbyid",
                    "organizationid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "StoredDocument.Fields"
          },
          "include": {
            "title": "StoredDocument.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/StoredDocument.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<StoredDocument>"
      },
      "StoredDocument.Filter2": {
        "type": "object",
        "title": "StoredDocument.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "StoredDocument.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "path": {
                    "type": "boolean"
                  },
                  "size": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "category": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "createdat": {
                    "type": "boolean"
                  },
                  "addedbyid": {
                    "type": "boolean"
                  },
                  "organizationid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "path",
                    "size",
                    "type",
                    "category",
                    "status",
                    "props",
                    "createdat",
                    "addedbyid",
                    "organizationid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "StoredDocument.Fields"
          },
          "include": {
            "title": "StoredDocument.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/StoredDocument.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<StoredDocument>"
      },
      "Subscription.Filter": {
        "type": "object",
        "title": "Subscription.Filter",
        "properties": {
          "where": {
            "title": "Subscription.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Subscription>"
      },
      "Subscription.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Subscription.ScopeFilter"
      },
      "Subscription.IncludeFilter.Items": {
        "title": "Subscription.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "subscriptionplan",
              "user"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/Subscription.ScopeFilter"
          }
        }
      },
      "Subscription.Filter1": {
        "type": "object",
        "title": "Subscription.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "externalplanid": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "startdate": {
                    "type": "boolean"
                  },
                  "enddate": {
                    "type": "boolean"
                  },
                  "createdat": {
                    "type": "boolean"
                  },
                  "updatedat": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "subscriptionplanid": {
                    "type": "boolean"
                  },
                  "userid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "description",
                    "externalplanid",
                    "status",
                    "startdate",
                    "enddate",
                    "createdat",
                    "updatedat",
                    "props",
                    "subscriptionplanid",
                    "userid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Subscription.Fields"
          },
          "include": {
            "title": "Subscription.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Subscription.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Subscription>"
      },
      "Subscription.Filter2": {
        "type": "object",
        "title": "Subscription.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Subscription.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "externalplanid": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "startdate": {
                    "type": "boolean"
                  },
                  "enddate": {
                    "type": "boolean"
                  },
                  "createdat": {
                    "type": "boolean"
                  },
                  "updatedat": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "subscriptionplanid": {
                    "type": "boolean"
                  },
                  "userid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "description",
                    "externalplanid",
                    "status",
                    "startdate",
                    "enddate",
                    "createdat",
                    "updatedat",
                    "props",
                    "subscriptionplanid",
                    "userid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Subscription.Fields"
          },
          "include": {
            "title": "Subscription.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Subscription.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Subscription>"
      },
      "SubscriptionPlan.Filter": {
        "type": "object",
        "title": "SubscriptionPlan.Filter",
        "properties": {
          "where": {
            "title": "SubscriptionPlan.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<SubscriptionPlan>"
      },
      "SubscriptionPlan.Filter1": {
        "type": "object",
        "title": "SubscriptionPlan.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "externalplanid": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "interval": {
                    "type": "boolean"
                  },
                  "createdat": {
                    "type": "boolean"
                  },
                  "updatedat": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "description",
                    "externalplanid",
                    "currency",
                    "interval",
                    "createdat",
                    "updatedat",
                    "props"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "SubscriptionPlan.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<SubscriptionPlan>"
      },
      "SubscriptionPlan.Filter2": {
        "type": "object",
        "title": "SubscriptionPlan.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "SubscriptionPlan.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "externalplanid": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "interval": {
                    "type": "boolean"
                  },
                  "createdat": {
                    "type": "boolean"
                  },
                  "updatedat": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "description",
                    "externalplanid",
                    "currency",
                    "interval",
                    "createdat",
                    "updatedat",
                    "props"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "SubscriptionPlan.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<SubscriptionPlan>"
      },
      "Tax.Filter": {
        "type": "object",
        "title": "Tax.Filter",
        "properties": {
          "where": {
            "title": "Tax.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Tax>"
      },
      "Tax.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Tax.ScopeFilter"
      },
      "Tax.IncludeFilter.Items": {
        "title": "Tax.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "branch"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/Tax.ScopeFilter"
          }
        }
      },
      "Tax.Filter1": {
        "type": "object",
        "title": "Tax.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "shortname": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "rate": {
                    "type": "boolean"
                  },
                  "appliedto": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "shortname",
                    "description",
                    "rate",
                    "appliedto",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Tax.Fields"
          },
          "include": {
            "title": "Tax.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Tax.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Tax>"
      },
      "Tax.Filter2": {
        "type": "object",
        "title": "Tax.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Tax.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "shortname": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "rate": {
                    "type": "boolean"
                  },
                  "appliedto": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "shortname",
                    "description",
                    "rate",
                    "appliedto",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Tax.Fields"
          },
          "include": {
            "title": "Tax.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Tax.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Tax>"
      },
      "User.Filter": {
        "type": "object",
        "title": "User.Filter",
        "properties": {
          "where": {
            "title": "User.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<User>"
      },
      "User.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "User.ScopeFilter"
      },
      "User.IncludeFilter.Items": {
        "title": "User.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "subscriptions",
              "organizations"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/User.ScopeFilter"
          }
        }
      },
      "User.Filter1": {
        "type": "object",
        "title": "User.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "email"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "User.Fields"
          },
          "include": {
            "title": "User.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/User.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<User>"
      },
      "User.Filter2": {
        "type": "object",
        "title": "User.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "User.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "email"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "User.Fields"
          },
          "include": {
            "title": "User.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/User.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<User>"
      },
      "Vendor.Filter": {
        "type": "object",
        "title": "Vendor.Filter",
        "properties": {
          "where": {
            "title": "Vendor.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Vendor>"
      },
      "Vendor.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Vendor.ScopeFilter"
      },
      "Vendor.IncludeFilter.Items": {
        "title": "Vendor.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "branch"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/Vendor.ScopeFilter"
          }
        }
      },
      "Vendor.Filter1": {
        "type": "object",
        "title": "Vendor.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "mobile": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "gstin": {
                    "type": "boolean"
                  },
                  "pan": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "country": {
                    "type": "boolean"
                  },
                  "state": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "mobile",
                    "email",
                    "gstin",
                    "pan",
                    "address",
                    "country",
                    "state",
                    "currency",
                    "description",
                    "props",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Vendor.Fields"
          },
          "include": {
            "title": "Vendor.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Vendor.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Vendor>"
      },
      "Vendor.Filter2": {
        "type": "object",
        "title": "Vendor.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Vendor.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "mobile": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "gstin": {
                    "type": "boolean"
                  },
                  "pan": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "country": {
                    "type": "boolean"
                  },
                  "state": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "props": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "mobile",
                    "email",
                    "gstin",
                    "pan",
                    "address",
                    "country",
                    "state",
                    "currency",
                    "description",
                    "props",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Vendor.Fields"
          },
          "include": {
            "title": "Vendor.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Vendor.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Vendor>"
      },
      "VendorPayment.Filter": {
        "type": "object",
        "title": "VendorPayment.Filter",
        "properties": {
          "where": {
            "title": "VendorPayment.WhereFilter",
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<VendorPayment>"
      },
      "VendorPayment.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "VendorPayment.ScopeFilter"
      },
      "VendorPayment.IncludeFilter.Items": {
        "title": "VendorPayment.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "vendor",
              "bcash",
              "invoices",
              "branch"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/VendorPayment.ScopeFilter"
          }
        }
      },
      "VendorPayment.Filter1": {
        "type": "object",
        "title": "VendorPayment.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "date": {
                    "type": "boolean"
                  },
                  "amount": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "cprops": {
                    "type": "boolean"
                  },
                  "sprops": {
                    "type": "boolean"
                  },
                  "vendorid": {
                    "type": "boolean"
                  },
                  "bcashid": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "date",
                    "amount",
                    "currency",
                    "cprops",
                    "sprops",
                    "vendorid",
                    "bcashid",
                    "description",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "VendorPayment.Fields"
          },
          "include": {
            "title": "VendorPayment.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/VendorPayment.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<VendorPayment>"
      },
      "VendorPayment.Filter2": {
        "type": "object",
        "title": "VendorPayment.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "VendorPayment.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "date": {
                    "type": "boolean"
                  },
                  "amount": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "cprops": {
                    "type": "boolean"
                  },
                  "sprops": {
                    "type": "boolean"
                  },
                  "vendorid": {
                    "type": "boolean"
                  },
                  "bcashid": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "branchid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "date",
                    "amount",
                    "currency",
                    "cprops",
                    "sprops",
                    "vendorid",
                    "bcashid",
                    "description",
                    "branchid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "VendorPayment.Fields"
          },
          "include": {
            "title": "VendorPayment.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/VendorPayment.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<VendorPayment>"
      }
    }
  }
}